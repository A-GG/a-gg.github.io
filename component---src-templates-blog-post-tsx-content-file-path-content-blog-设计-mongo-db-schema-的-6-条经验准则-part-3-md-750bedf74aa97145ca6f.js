"use strict";(self.webpackChunkw1zd_lair=self.webpackChunkw1zd_lair||[]).push([[3267],{3452:function(e,t,n){n.r(t),n.d(t,{default:function(){return h}});var l=n(8453),a=n(6540);function r(e){const t=Object.assign({img:"img",p:"p",h2:"h2",a:"a",span:"span",ul:"ul",li:"li",strong:"strong"},(0,l.RP)(),e.components);return a.createElement(a.Fragment,null,a.createElement(t.img,{src:"https://raw.githubusercontent.com/w1zd/image-hosting/main/img/2022/05/10/11-39-37-bcdc910ae36e1e705a6de04aade00f6c-mongodb-b61c9d.jpg",alt:""}),"\n",a.createElement(t.p,null,"作者：MongoDB 首席技术支持工程师 William Zola"),"\n",a.createElement(t.p,null,"这将是我们在 MongoDB 中建立“一对多”关系的最后一站。[[设计-MongoDB-Schema-的-6-条经验准则-Part-1]]中，我跟大家介绍了设计“一对多”关系的三种基本方式。在[[设计-MongoDB-Schema-的-6-条经验准则-Part-2]]中，我对这些基本方式做了一些扩展：双向引用和非规范化数据存储。"),"\n",a.createElement(t.p,null,"非规范化数据存储可以让你避免使用一些应用程序级别的连接查询，但更新的时候却更复杂，性能开销更大。非规范化存储一个或多个字段只有在读取操作的频率远高于更新操作时才有意义。"),"\n",a.createElement(t.h2,{id:"哇瞧瞧这些选择",style:{position:"relative"}},a.createElement(t.a,{href:"#%E5%93%87%E7%9E%A7%E7%9E%A7%E8%BF%99%E4%BA%9B%E9%80%89%E6%8B%A9","aria-label":"哇瞧瞧这些选择 permalink",className:"anchor before"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"哇，瞧瞧这些选择"),"\n",a.createElement(t.p,null,"好，我们先回顾一下："),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,"你可以嵌入，或者从“一”那一端做引用，或者从“多”那一端做引用，或者结合这两种技术。"),"\n",a.createElement(t.li,null,"你可以将任意多个字段非规范化存储到“一”端或者“多”端。"),"\n"),"\n",a.createElement(t.p,null,"特别是非规范化存储，给了你很多选择：如果在一个关系中有8个备选的内容做非规范化存储，那么你就有 2",a.createElement("sup",null,"8"),"(256) 种不同的方法去做非规范化存储（也包括完全不进行非规范化存储）。在加上还有 3 种不同的引用方式，我们就可以乘以 3 ，也就是说我们有超过768中不同的关系建模方式。"),"\n",a.createElement(t.p,null,"你猜怎么着？ 现在，你已经陷入了“选择悖论”中。因为你有许多潜在的方式来进行建模“一对N”关系，因此如何建模，选择变得更加困难，而且难得多。"),"\n",a.createElement(t.h2,{id:"经验法则",style:{position:"relative"}},a.createElement(t.a,{href:"#%E7%BB%8F%E9%AA%8C%E6%B3%95%E5%88%99","aria-label":"经验法则 permalink",className:"anchor before"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"经验法则"),"\n",a.createElement(t.p,null,"这里有一些经验法则来指导你完成这些不可数(但不是无限)的选择。"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"一"),"：使用嵌入，除非有非常明显的原因不能这么做"),"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"二"),"：如果你需要访问一个对象本身，这就是一个把他做嵌入的理由"),"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"三"),"：数组不应该无限制的增长，如果“多”的那一边有超过几百个以上的文档，那就不要嵌入；如果在“多”的那一边有数千个文档，那就不要使用 ",a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">ObjectID</code>'}})," 数组引用。高基数的数组是不嵌入的强依据。"),"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"四"),"：别担心使用应用程序级别的数据连接，如果你正确的建立了索引并且使用了投影说明符，那么应用程序级别的连接其实只比关系数据库中的连接性能低一点点。"),"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"五"),"：在做非规范化存储的时候，一定要考虑读写比。一个字段如果非常频繁的被读取而又很少被更新，那么这个字段就适合被非规范化存储。如果你对一个更新非常频繁的字段做了非规范存储，那么查找和更新所有实例的性能开销其实已经抵消了非规范化存储带来的优化。"),"\n",a.createElement(t.li,null,a.createElement(t.strong,null,"六"),"：在 MongoDB 中，数据建模的方式完全取决于特定应用程序的数据访问模式。你应该设计正确的数据结构来匹配你应用程序中对数据查询和更新的方式。"),"\n"),"\n",a.createElement(t.h2,{id:"给你的指南",style:{position:"relative"}},a.createElement(t.a,{href:"#%E7%BB%99%E4%BD%A0%E7%9A%84%E6%8C%87%E5%8D%97","aria-label":"给你的指南 permalink",className:"anchor before"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"给你的指南"),"\n",a.createElement(t.p,null,"当你在 MongoDB 中进行“一对多”关系建模的时候，你有非常多的选择，所以你需要仔细的思考你的数据结构。你需要思考的主要准则如下:"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,"你的一对多关系的技术是什么? 一对几个？一对很多？一对超级多？"),"\n",a.createElement(t.li,null,"你需不需要独立的访问“多”端的数据，还是说他只需要存在于父对象的上下文里？"),"\n",a.createElement(t.li,null,"对于特定字段来讲，他的读写比例是啥样的？"),"\n"),"\n",a.createElement(t.p,null,"你做数据结构的主要选择是："),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,"对于“一对几个”来讲，你可以直接用数组嵌入"),"\n",a.createElement(t.li,null,"对于“一对多个”来讲，或者在“多”端的数据必须独立的情况下，应该使用数组引用。你也可以在“多”端使用父引用，如果它能够优化你的数据访问模式。"),"\n",a.createElement(t.li,null,"对于“一对超级多”来讲，你应该在“多”端的文档中使用父引用。"),"\n"),"\n",a.createElement(t.p,null,"一旦确定了数据的整体结构，就可以选择对数据进行非规范化存储，当然如果你选择这么做的话，不论是把“一”非规范化存储到“多”，还是把“多”非规范化存储到“一”，都可以。但是你应该只对读取频率远大于更新频率的字段进行非规范化存储，而且这个字段不要求个别严格的一致性，因为更新一个非规范化存储的字段会比较慢，而且新能开销更大，并且不是原子性的。"),"\n",a.createElement(t.h2,{id:"生产力和灵活性",style:{position:"relative"}},a.createElement(t.a,{href:"#%E7%94%9F%E4%BA%A7%E5%8A%9B%E5%92%8C%E7%81%B5%E6%B4%BB%E6%80%A7","aria-label":"生产力和灵活性 permalink",className:"anchor before"},a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"生产力和灵活性"),"\n",a.createElement(t.p,null,"总而言之，MongoDB 使你能够设计数据库架构以匹配应用程序的需求。 你可以在 MongoDB 中构建数据，他能轻松适应变化，并支持充分利用应用程序的性能进行所需的查询和更新。"))}var c=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,l.RP)(),e.components);return t?a.createElement(t,e,a.createElement(r,e)):r(e)},s=n(1468),m=n(7947),i=n(1327),o=n(2171),E=n(9739);const u=e=>{let{data:t,pageContext:n,children:r}=e;const c=t.mdx,{title:u,postCopyright:h,author:p,siteUrl:d}=t.site.siteMetadata,{previous:g,next:f}=n,v=(0,s.d4)((e=>e.isDarkMode));return(0,a.useEffect)((()=>{(0,E.A)(".post-content img",{background:"#292a2d"})}),[]),a.createElement(m.A,{isFocus:!1,title:c.frontmatter.title,description:c.frontmatter.description},a.createElement("div",{className:"container"},a.createElement("article",{className:"post-wrap"},a.createElement("header",{className:"post-header"},a.createElement("h1",{className:"post-title"},c.frontmatter.title),a.createElement("div",{className:"post-meta"},t.site.siteMetadata.author.name,"  /  ",a.createElement("span",{className:"post-time"},c.frontmatter.date)," ")),a.createElement("div",{className:"post-content"},a.createElement(l.xA,null,r)),h&&a.createElement("section",{className:"post-copyright"},a.createElement("p",{className:"copyright-item"},a.createElement("span",null,"Author: "),a.createElement("span",null,p.name)),a.createElement("p",{className:"copyright-item"},a.createElement("span",null,"Permalink:"),a.createElement("span",null,a.createElement("a",{href:d+c.fields.slug}," ",d+c.fields.slug," "))),a.createElement("p",{className:"copyright-item"},a.createElement("span",null,"License: "),a.createElement("span",null,a.createElement("a",{href:"http://creativecommons.org/licenses/by-nc/4.0/"},"CC-BY-NC-4.0")))),a.createElement("section",{className:"post-tags"},a.createElement("div",null,a.createElement("span",null,"Tag(s):"),a.createElement("span",{className:"tag"},0!==c.frontmatter.tags.length&&c.frontmatter.tags.map((e=>a.createElement("a",{key:e,href:`/tag/${e}`},"#",e))))),a.createElement("div",null,a.createElement("a",{href:"#/",onClick:()=>{window.history.back()}},"back"),a.createElement("span",null," · "),a.createElement("a",{href:t.site.siteMetadata.siteUrl},"home"))),a.createElement("section",{className:"post-nav"},g?a.createElement("a",{className:"prev",rel:"prev",href:g.fields.slug},g.frontmatter.title):a.createElement("span",{className:"prev"},"No More"),f?a.createElement("a",{className:"next",rel:"next",href:f.fields.slug},f.frontmatter.title):a.createElement("span",{className:"next"},"No More")),a.createElement(o.A,{id:"comment",repo:"w1zd/w1zd.github.io",repoId:"MDEwOlJlcG9zaXRvcnkyODg3MTA5NjA=",category:"Announcements",categoryId:"MDE4OkRpc2N1c3Npb25DYXRlZ29yeTMzMDE1OTcy",mapping:"og:title",theme:`https://wizd.dev/giscus-themes/${v?"dark":"light"}.css`,reactionsEnabled:"1",loading:"lazy"}),c.frontmatter.toc&&a.createElement(i.A,null))))};function h(e){return a.createElement(u,e,a.createElement(c,e))}}}]);
//# sourceMappingURL=component---src-templates-blog-post-tsx-content-file-path-content-blog-设计-mongo-db-schema-的-6-条经验准则-part-3-md-750bedf74aa97145ca6f.js.map