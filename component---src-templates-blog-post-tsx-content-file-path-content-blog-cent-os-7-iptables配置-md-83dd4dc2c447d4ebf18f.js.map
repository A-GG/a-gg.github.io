{"version":3,"file":"component---src-templates-blog-post-tsx-content-file-path-content-blog-cent-os-7-iptables配置-md-83dd4dc2c447d4ebf18f.js","mappings":"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","sources":["webpack://w1zd-lair/./content/blog/CentOS7-iptables配置.md","webpack://w1zd-lair/./src/templates/blog-post.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    span: \"span\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"CentOS7使用的防火墙默认为firewalle,本篇文章主要讲述如何在CentOS7中安装和使用iptables防火墙。\"), \"\\n\", React.createElement(_components.p, null, \"安装iptable iptable-service\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token comment\\\">#先检查是否安装了iptables</span>\\n<span class=\\\"token function\\\">service</span> iptables status\\n<span class=\\\"token comment\\\">#安装iptables</span>\\nyum <span class=\\\"token function\\\">install</span> -y iptables\\n<span class=\\\"token comment\\\">#升级iptables</span>\\nyum update iptables \\n<span class=\\\"token comment\\\">#安装iptables-services</span>\\nyum <span class=\\\"token function\\\">install</span> iptables-services</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"禁用/停止自带的firewalld服务\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token comment\\\">#停止firewalld服务</span>\\nsystemctl stop firewalld\\n<span class=\\\"token comment\\\">#禁用firewalld服务</span>\\nsystemctl mask firewalld</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"设置现有规则\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token comment\\\">#查看iptables现有规则</span>\\niptables -L -n\\n<span class=\\\"token comment\\\">#先允许所有,不然有可能会杯具</span>\\niptables -P INPUT ACCEPT\\n<span class=\\\"token comment\\\">#清空所有默认规则</span>\\niptables -F\\n<span class=\\\"token comment\\\">#清空所有自定义规则</span>\\niptables -X\\n<span class=\\\"token comment\\\">#所有计数器归0</span>\\niptables -Z\\n<span class=\\\"token comment\\\">#允许来自于lo接口的数据包(本地访问)</span>\\niptables -A INPUT -i lo -j ACCEPT\\n<span class=\\\"token comment\\\">#开放22端口</span>\\niptables -A INPUT -p tcp --dport <span class=\\\"token number\\\">22</span> -j ACCEPT\\n<span class=\\\"token comment\\\">#开放21端口(FTP)</span>\\niptables -A INPUT -p tcp --dport <span class=\\\"token number\\\">21</span> -j ACCEPT\\n<span class=\\\"token comment\\\">#开放80端口(HTTP)</span>\\niptables -A INPUT -p tcp --dport <span class=\\\"token number\\\">80</span> -j ACCEPT\\n<span class=\\\"token comment\\\">#开放443端口(HTTPS)</span>\\niptables -A INPUT -p tcp --dport <span class=\\\"token number\\\">443</span> -j ACCEPT\\n<span class=\\\"token comment\\\">#允许ping</span>\\niptables -A INPUT -p icmp --icmp-type <span class=\\\"token number\\\">8</span> -j ACCEPT\\n<span class=\\\"token comment\\\">#允许接受本机请求之后的返回数据 RELATED,是为FTP设置的</span>\\niptables -A INPUT -m state --state  RELATED,ESTABLISHED -j ACCEPT\\n<span class=\\\"token comment\\\">#其他入站一律丢弃</span>\\niptables -P INPUT DROP\\n<span class=\\\"token comment\\\">#所有出站一律绿灯</span>\\niptables -P OUTPUT ACCEPT\\n<span class=\\\"token comment\\\">#所有转发一律丢弃</span>\\niptables -P FORWARD DROP</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"其他规则设定\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token comment\\\">#如果要添加内网ip信任（接受其所有TCP请求）</span>\\niptables -A INPUT -p tcp -s <span class=\\\"token number\\\">45.96</span>.174.68 -j ACCEPT\\n<span class=\\\"token comment\\\">#过滤所有非以上规则的请求</span>\\niptables -P INPUT DROP\\n<span class=\\\"token comment\\\">#要封停一个IP，使用下面这条命令：</span>\\niptables -I INPUT -s ***.***.***.*** -j DROP\\n<span class=\\\"token comment\\\">#要解封一个IP，使用下面这条命令:</span>\\niptables -D INPUT -s ***.***.***.*** -j DROP</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"保存规则设定\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token comment\\\">#保存上述规则</span>\\n<span class=\\\"token function\\\">service</span> iptables save</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"开启iptables服务\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token comment\\\">#注册iptables服务</span>\\n<span class=\\\"token comment\\\">#相当于以前的chkconfig iptables on</span>\\nsystemctl <span class=\\\"token builtin class-name\\\">enable</span> iptables.service\\n<span class=\\\"token comment\\\">#开启服务</span>\\nsystemctl start iptables.service\\n<span class=\\\"token comment\\\">#查看状态</span>\\nsystemctl status iptables.service</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"解决vsftpd在iptables开启后,无法使用被动模式的问题\"), \"\\n\", React.createElement(_components.p, null, \"1.首先在/etc/sysconfig/iptables-config中修改或者添加以下内容\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token comment\\\">#添加以下内容,注意顺序不能调换</span>\\n<span class=\\\"token assign-left variable\\\">IPTABLES_MODULES</span><span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"ip_conntrack_ftp\\\"</span>\\n<span class=\\\"token assign-left variable\\\">IPTABLES_MODULES</span><span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"ip_nat_ftp\\\"</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"2.重新设置iptables设置\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">iptables -A INPUT -m state --state  RELATED,ESTABLISHED -j ACCEPT</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"以下为完整设置脚本\")), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token shebang important\\\">#!/bin/sh</span>\\niptables -P INPUT ACCEPT\\niptables -F\\niptables -X\\niptables -Z\\niptables -A INPUT -i lo -j ACCEPT\\niptables -A INPUT -p tcp --dport <span class=\\\"token number\\\">22</span> -j ACCEPT\\niptables -A INPUT -p tcp --dport <span class=\\\"token number\\\">21</span> -j ACCEPT\\niptables -A INPUT -p tcp --dport <span class=\\\"token number\\\">80</span> -j ACCEPT\\niptables -A INPUT -p tcp --dport <span class=\\\"token number\\\">443</span> -j ACCEPT\\niptables -A INPUT -p icmp --icmp-type <span class=\\\"token number\\\">8</span> -j ACCEPT\\niptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT\\niptables -P INPUT DROP\\niptables -P OUTPUT ACCEPT\\niptables -P FORWARD DROP\\n<span class=\\\"token function\\\">service</span> iptables save\\nsystemctl restart iptables.service</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"##如何删除单条规则？\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token comment\\\">#先使用行号显示所有规则</span>\\niptables -t nat -L -n --line-numbers\\n<span class=\\\"token comment\\\">#找到要删除的规则，确认前面的行号，使用下面的命令进行删除</span>\\niptables -t nat -D PREROUTING 行号</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"##如何删除多条规则？\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token comment\\\">#将所有的iptables规则导出到iptableRules文件</span>\\niptables-save <span class=\\\"token operator\\\">></span> iptablesRules\\n<span class=\\\"token comment\\\">#打开该文件，将你不想要的所有规则都删掉，改完记得保存</span>\\n<span class=\\\"token comment\\\">#保存完之后使用该文件重新配置iptables</span>\\niptables-restore <span class=\\\"token operator\\\">&lt;</span> iptablesRules</code></pre></div>\"\n    }\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/w1zd.github.io/w1zd.github.io/content/blog/CentOS7-iptables配置.md\";\nimport React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport Layout from \"../components/layout\";\nimport TOC from \"../components/toc\";\nimport {useEffect} from \"react\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport Giscus from \"@giscus/react\";\nimport mediumZoom from \"medium-zoom\";\nconst BlogPostTemplate = _ref => {\n  let {data, pageContext, children} = _ref;\n  const post = data.mdx;\n  const {title: siteTitle, postCopyright, author, siteUrl} = data.site.siteMetadata;\n  const {previous, next} = pageContext;\n  const isDarkmode = useSelector(state => state.isDarkMode);\n  useEffect(() => {\n    mediumZoom(\".post-content img\", {\n      background: \"#292a2d\"\n    });\n  }, []);\n  return React.createElement(Layout, {\n    isFocus: false,\n    title: post.frontmatter.title,\n    description: post.frontmatter.description\n  }, React.createElement(\"div\", {\n    className: \"container\"\n  }, React.createElement(\"article\", {\n    className: \"post-wrap\"\n  }, React.createElement(\"header\", {\n    className: \"post-header\"\n  }, React.createElement(\"h1\", {\n    className: \"post-title\"\n  }, post.frontmatter.title), React.createElement(\"div\", {\n    className: \"post-meta\"\n  }, React.createElement(\"span\", {\n    className: \"post-time\"\n  }, post.frontmatter.date), \"\\xA0\")), React.createElement(\"div\", {\n    className: \"post-content\"\n  }, React.createElement(MDXProvider, null, children)), postCopyright && React.createElement(\"section\", {\n    className: \"post-copyright\"\n  }, React.createElement(\"p\", {\n    className: \"copyright-item\"\n  }, React.createElement(\"span\", null, \"Author:\\xA0\"), React.createElement(\"span\", null, author.name)), React.createElement(\"p\", {\n    className: \"copyright-item\"\n  }, React.createElement(\"span\", null, \"Permalink:\"), React.createElement(\"span\", null, React.createElement(\"a\", {\n    href: siteUrl + post.fields.slug\n  }, \" \", siteUrl + post.fields.slug, \" \"))), React.createElement(\"p\", {\n    className: \"copyright-item\"\n  }, React.createElement(\"span\", null, \"License:\\xA0\"), React.createElement(\"span\", null, React.createElement(\"a\", {\n    href: \"http://creativecommons.org/licenses/by-nc/4.0/\"\n  }, \"CC-BY-NC-4.0\")))), React.createElement(\"section\", {\n    className: \"post-tags\"\n  }, React.createElement(\"div\", null, React.createElement(\"span\", null, \"Tag(s):\"), React.createElement(\"span\", {\n    className: \"tag\"\n  }, post.frontmatter.tags.length !== 0 && post.frontmatter.tags.map(item => {\n    return React.createElement(\"a\", {\n      key: item,\n      href: `/tag/${item}`\n    }, \"#\", item);\n  }))), React.createElement(\"div\", null, React.createElement(\"a\", {\n    href: \"#/\",\n    onClick: () => {\n      window.history.back();\n    }\n  }, \"back\"), React.createElement(\"span\", null, \" \\xB7 \"), React.createElement(\"a\", {\n    href: data.site.siteMetadata.siteUrl\n  }, \"home\"))), React.createElement(\"section\", {\n    className: \"post-nav\"\n  }, previous ? React.createElement(\"a\", {\n    className: \"prev\",\n    rel: \"prev\",\n    href: previous.fields.slug\n  }, previous.frontmatter.title) : React.createElement(\"span\", {\n    className: \"prev\"\n  }, \"No More\"), next ? React.createElement(\"a\", {\n    className: \"next\",\n    rel: \"next\",\n    href: next.fields.slug\n  }, next.frontmatter.title) : React.createElement(\"span\", {\n    className: \"next\"\n  }, \"No More\")), React.createElement(Giscus, {\n    id: \"comment\",\n    repo: \"w1zd/w1zd.github.io\",\n    repoId: \"MDEwOlJlcG9zaXRvcnkyODg3MTA5NjA=\",\n    category: \"Announcements\",\n    categoryId: \"MDE4OkRpc2N1c3Npb25DYXRlZ29yeTMzMDE1OTcy\",\n    mapping: \"og:title\",\n    theme: `https://wizd.dev/giscus-themes/${isDarkmode ? \"dark\" : \"light\"}.css`,\n    reactionsEnabled: \"1\",\n    loading: \"lazy\"\n  }), post.frontmatter.toc && React.createElement(TOC, null))));\n};\nBlogPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst pageQuery = \"60074105\";\n"],"names":["_createMdxContent","props","_components","Object","assign","p","span","strong","_provideComponents","components","React","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","BlogPostTemplate","_ref","data","pageContext","children","post","mdx","title","siteTitle","postCopyright","author","siteUrl","site","siteMetadata","previous","next","isDarkmode","useSelector","state","isDarkMode","useEffect","mediumZoom","background","Layout","isFocus","frontmatter","description","className","date","MDXProvider","name","href","fields","slug","tags","length","map","item","key","onClick","window","history","back","rel","Giscus","id","repo","repoId","category","categoryId","mapping","theme","reactionsEnabled","loading","toc","TOC","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}