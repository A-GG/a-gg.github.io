{"version":3,"file":"component---src-templates-blog-post-tsx-content-file-path-content-blog-设计-mongo-db-schema-的-6-条经验准则-part-3-md-750bedf74aa97145ca6f.js","mappings":"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","sources":["webpack://w1zd-lair/./content/blog/设计-MongoDB-Schema-的-6-条经验准则-Part-3.md","webpack://w1zd-lair/./src/templates/blog-post.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    img: \"img\",\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.img, {\n    src: \"https://raw.githubusercontent.com/w1zd/image-hosting/main/img/2022/05/10/11-39-37-bcdc910ae36e1e705a6de04aade00f6c-mongodb-b61c9d.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"作者：MongoDB 首席技术支持工程师 William Zola\"), \"\\n\", React.createElement(_components.p, null, \"这将是我们在 MongoDB 中建立“一对多”关系的最后一站。[[设计-MongoDB-Schema-的-6-条经验准则-Part-1]]中，我跟大家介绍了设计“一对多”关系的三种基本方式。在[[设计-MongoDB-Schema-的-6-条经验准则-Part-2]]中，我对这些基本方式做了一些扩展：双向引用和非规范化数据存储。\"), \"\\n\", React.createElement(_components.p, null, \"非规范化数据存储可以让你避免使用一些应用程序级别的连接查询，但更新的时候却更复杂，性能开销更大。非规范化存储一个或多个字段只有在读取操作的频率远高于更新操作时才有意义。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"哇瞧瞧这些选择\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E5%93%87%E7%9E%A7%E7%9E%A7%E8%BF%99%E4%BA%9B%E9%80%89%E6%8B%A9\",\n    \"aria-label\": \"哇瞧瞧这些选择 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"哇，瞧瞧这些选择\"), \"\\n\", React.createElement(_components.p, null, \"好，我们先回顾一下：\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"你可以嵌入，或者从“一”那一端做引用，或者从“多”那一端做引用，或者结合这两种技术。\"), \"\\n\", React.createElement(_components.li, null, \"你可以将任意多个字段非规范化存储到“一”端或者“多”端。\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"特别是非规范化存储，给了你很多选择：如果在一个关系中有8个备选的内容做非规范化存储，那么你就有 2\", React.createElement(\"sup\", null, \"8\"), \"(256) 种不同的方法去做非规范化存储（也包括完全不进行非规范化存储）。在加上还有 3 种不同的引用方式，我们就可以乘以 3 ，也就是说我们有超过768中不同的关系建模方式。\"), \"\\n\", React.createElement(_components.p, null, \"你猜怎么着？ 现在，你已经陷入了“选择悖论”中。因为你有许多潜在的方式来进行建模“一对N”关系，因此如何建模，选择变得更加困难，而且难得多。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"经验法则\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E7%BB%8F%E9%AA%8C%E6%B3%95%E5%88%99\",\n    \"aria-label\": \"经验法则 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"经验法则\"), \"\\n\", React.createElement(_components.p, null, \"这里有一些经验法则来指导你完成这些不可数(但不是无限)的选择。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"一\"), \"：使用嵌入，除非有非常明显的原因不能这么做\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"二\"), \"：如果你需要访问一个对象本身，这就是一个把他做嵌入的理由\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"三\"), \"：数组不应该无限制的增长，如果“多”的那一边有超过几百个以上的文档，那就不要嵌入；如果在“多”的那一边有数千个文档，那就不要使用 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">ObjectID</code>\"\n    }\n  }), \" 数组引用。高基数的数组是不嵌入的强依据。\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"四\"), \"：别担心使用应用程序级别的数据连接，如果你正确的建立了索引并且使用了投影说明符，那么应用程序级别的连接其实只比关系数据库中的连接性能低一点点。\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"五\"), \"：在做非规范化存储的时候，一定要考虑读写比。一个字段如果非常频繁的被读取而又很少被更新，那么这个字段就适合被非规范化存储。如果你对一个更新非常频繁的字段做了非规范存储，那么查找和更新所有实例的性能开销其实已经抵消了非规范化存储带来的优化。\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"六\"), \"：在 MongoDB 中，数据建模的方式完全取决于特定应用程序的数据访问模式。你应该设计正确的数据结构来匹配你应用程序中对数据查询和更新的方式。\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"给你的指南\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E7%BB%99%E4%BD%A0%E7%9A%84%E6%8C%87%E5%8D%97\",\n    \"aria-label\": \"给你的指南 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"给你的指南\"), \"\\n\", React.createElement(_components.p, null, \"当你在 MongoDB 中进行“一对多”关系建模的时候，你有非常多的选择，所以你需要仔细的思考你的数据结构。你需要思考的主要准则如下:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"你的一对多关系的技术是什么? 一对几个？一对很多？一对超级多？\"), \"\\n\", React.createElement(_components.li, null, \"你需不需要独立的访问“多”端的数据，还是说他只需要存在于父对象的上下文里？\"), \"\\n\", React.createElement(_components.li, null, \"对于特定字段来讲，他的读写比例是啥样的？\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"你做数据结构的主要选择是：\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"对于“一对几个”来讲，你可以直接用数组嵌入\"), \"\\n\", React.createElement(_components.li, null, \"对于“一对多个”来讲，或者在“多”端的数据必须独立的情况下，应该使用数组引用。你也可以在“多”端使用父引用，如果它能够优化你的数据访问模式。\"), \"\\n\", React.createElement(_components.li, null, \"对于“一对超级多”来讲，你应该在“多”端的文档中使用父引用。\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"一旦确定了数据的整体结构，就可以选择对数据进行非规范化存储，当然如果你选择这么做的话，不论是把“一”非规范化存储到“多”，还是把“多”非规范化存储到“一”，都可以。但是你应该只对读取频率远大于更新频率的字段进行非规范化存储，而且这个字段不要求个别严格的一致性，因为更新一个非规范化存储的字段会比较慢，而且新能开销更大，并且不是原子性的。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"生产力和灵活性\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E7%94%9F%E4%BA%A7%E5%8A%9B%E5%92%8C%E7%81%B5%E6%B4%BB%E6%80%A7\",\n    \"aria-label\": \"生产力和灵活性 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"生产力和灵活性\"), \"\\n\", React.createElement(_components.p, null, \"总而言之，MongoDB 使你能够设计数据库架构以匹配应用程序的需求。 你可以在 MongoDB 中构建数据，他能轻松适应变化，并支持充分利用应用程序的性能进行所需的查询和更新。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/w1zd.github.io/w1zd.github.io/content/blog/设计-MongoDB-Schema-的-6-条经验准则-Part-3.md\";\nimport React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport Layout from \"../components/layout\";\nimport TOC from \"../components/toc\";\nimport {useEffect} from \"react\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport Giscus from \"@giscus/react\";\nimport mediumZoom from \"medium-zoom\";\nconst BlogPostTemplate = _ref => {\n  let {data, pageContext, children} = _ref;\n  const post = data.mdx;\n  const {title: siteTitle, postCopyright, author, siteUrl} = data.site.siteMetadata;\n  const {previous, next} = pageContext;\n  const isDarkmode = useSelector(state => state.isDarkMode);\n  useEffect(() => {\n    mediumZoom(\".post-content img\", {\n      background: \"#292a2d\"\n    });\n  }, []);\n  return React.createElement(Layout, {\n    isFocus: false,\n    title: post.frontmatter.title,\n    description: post.frontmatter.description\n  }, React.createElement(\"div\", {\n    className: \"container\"\n  }, React.createElement(\"article\", {\n    className: \"post-wrap\"\n  }, React.createElement(\"header\", {\n    className: \"post-header\"\n  }, React.createElement(\"h1\", {\n    className: \"post-title\"\n  }, post.frontmatter.title), React.createElement(\"div\", {\n    className: \"post-meta\"\n  }, data.site.siteMetadata.author.name, \"\\xA0 / \\xA0\", React.createElement(\"span\", {\n    className: \"post-time\"\n  }, post.frontmatter.date), \"\\xA0\")), React.createElement(\"div\", {\n    className: \"post-content\"\n  }, React.createElement(MDXProvider, null, children)), postCopyright && React.createElement(\"section\", {\n    className: \"post-copyright\"\n  }, React.createElement(\"p\", {\n    className: \"copyright-item\"\n  }, React.createElement(\"span\", null, \"Author:\\xA0\"), React.createElement(\"span\", null, author.name)), React.createElement(\"p\", {\n    className: \"copyright-item\"\n  }, React.createElement(\"span\", null, \"Permalink:\"), React.createElement(\"span\", null, React.createElement(\"a\", {\n    href: siteUrl + post.fields.slug\n  }, \" \", siteUrl + post.fields.slug, \" \"))), React.createElement(\"p\", {\n    className: \"copyright-item\"\n  }, React.createElement(\"span\", null, \"License:\\xA0\"), React.createElement(\"span\", null, React.createElement(\"a\", {\n    href: \"http://creativecommons.org/licenses/by-nc/4.0/\"\n  }, \"CC-BY-NC-4.0\")))), React.createElement(\"section\", {\n    className: \"post-tags\"\n  }, React.createElement(\"div\", null, React.createElement(\"span\", null, \"Tag(s):\"), React.createElement(\"span\", {\n    className: \"tag\"\n  }, post.frontmatter.tags.length !== 0 && post.frontmatter.tags.map(item => {\n    return React.createElement(\"a\", {\n      key: item,\n      href: `/tag/${item}`\n    }, \"#\", item);\n  }))), React.createElement(\"div\", null, React.createElement(\"a\", {\n    href: \"#/\",\n    onClick: () => {\n      window.history.back();\n    }\n  }, \"back\"), React.createElement(\"span\", null, \" \\xB7 \"), React.createElement(\"a\", {\n    href: data.site.siteMetadata.siteUrl\n  }, \"home\"))), React.createElement(\"section\", {\n    className: \"post-nav\"\n  }, previous ? React.createElement(\"a\", {\n    className: \"prev\",\n    rel: \"prev\",\n    href: previous.fields.slug\n  }, previous.frontmatter.title) : React.createElement(\"span\", {\n    className: \"prev\"\n  }, \"No More\"), next ? React.createElement(\"a\", {\n    className: \"next\",\n    rel: \"next\",\n    href: next.fields.slug\n  }, next.frontmatter.title) : React.createElement(\"span\", {\n    className: \"next\"\n  }, \"No More\")), React.createElement(Giscus, {\n    id: \"comment\",\n    repo: \"w1zd/w1zd.github.io\",\n    repoId: \"MDEwOlJlcG9zaXRvcnkyODg3MTA5NjA=\",\n    category: \"Announcements\",\n    categoryId: \"MDE4OkRpc2N1c3Npb25DYXRlZ29yeTMzMDE1OTcy\",\n    mapping: \"og:title\",\n    theme: `https://wizd.dev/giscus-themes/${isDarkmode ? \"dark\" : \"light\"}.css`,\n    reactionsEnabled: \"1\",\n    loading: \"lazy\"\n  }), post.frontmatter.toc && React.createElement(TOC, null))));\n};\nBlogPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst pageQuery = \"60074105\";\n"],"names":["_createMdxContent","props","_components","Object","assign","img","p","h2","a","span","ul","li","strong","_provideComponents","components","React","src","alt","id","style","position","href","className","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","BlogPostTemplate","_ref","data","pageContext","children","post","mdx","title","siteTitle","postCopyright","author","siteUrl","site","siteMetadata","previous","next","isDarkmode","useSelector","state","isDarkMode","useEffect","mediumZoom","background","Layout","isFocus","frontmatter","description","name","date","MDXProvider","fields","slug","tags","length","map","item","key","onClick","window","history","back","rel","Giscus","repo","repoId","category","categoryId","mapping","theme","reactionsEnabled","loading","toc","TOC","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}