{"version":3,"file":"component---src-templates-blog-post-tsx-content-file-path-content-blog-asp-net-mvc给母版页传递数据-md-4e1d1cab799c09472d5e.js","mappings":"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","sources":["webpack://w1zd-lair/./content/blog/ASP-NET-MVC给母版页传递数据.md","webpack://w1zd-lair/./src/templates/blog-post.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    blockquote: \"blockquote\",\n    p: \"p\",\n    br: \"br\",\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"在MVC中，我们会遇到这样的场景：\", React.createElement(_components.br), \"\\n\", \"每一页中需要都显示地区信息，这些地区信息都是存储在数据库当中的。\", React.createElement(_components.br), \"\\n\", \"为了方便使用，我们将地区信息在模板页中显示，问题来了，怎么在视图母版页面里从数据库检索这些地区信息？\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"直接在视图中操作数据库检索数据\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E7%9B%B4%E6%8E%A5%E5%9C%A8%E8%A7%86%E5%9B%BE%E4%B8%AD%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A3%80%E7%B4%A2%E6%95%B0%E6%8D%AE\",\n    \"aria-label\": \"直接在视图中操作数据库检索数据 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"直接在视图中操作数据库检索数据？\"), \"\\n\", React.createElement(_components.p, null, \"这样的确很方便，但是这样就违反了MVC的设计初衷，\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Model-View-Controller</code>\"\n    }\n  }), \"，就是为了将关注点进行分离，当然这也是\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">MVC</code>\"\n    }\n  }), \"的优点之一。\"), \"\\n\", React.createElement(_components.p, null, \"在MVC中，所有的Model的传递和交换都应该由\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Controller</code>\"\n    }\n  }), \"来进行，这样做会加强系统的可维护性以及可扩展性。也就是说所有传往视图的数据都应该由控制器来控制。\"), \"\\n\", React.createElement(_components.p, null, \"那这么说来，我们应该如何将数据传递到母版页视图（_Layout.cshtml）呢？\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"方法一\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E6%96%B9%E6%B3%95%E4%B8%80\",\n    \"aria-label\": \"方法一 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"方法一：\"), \"\\n\", React.createElement(_components.p, null, \"我们可以在控制器内的每个方法中，为母版页传递数据！\\n也就是说在控制器的没个方法中给ViewData进行赋值。这么做确实能实现，但是每个方法内都要写这么一段代码。\\n问题在于：DRY！\\n\", React.createElement(_components.strong, null, \"Don’t Repeat Yourself！\"), \"\\n每一个方法内都加一段读取数据的代码会提高程序的复杂度，造成后续的维护困难，那我们应该怎么做呢，别着急，往下看！\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"方法二\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E6%96%B9%E6%B3%95%E4%BA%8C\",\n    \"aria-label\": \"方法二 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"方法二：\"), \"\\n\", React.createElement(_components.p, null, \"既然不能这么重复的写代码，那我们就换个思路。\\n因为我们只需要对母版页视图传递一次数据就好了。\\n那我们就将从数据库中读取数据的操作放在控制器的构造方法中，这样就避免了要在每个方法中都加上相同的代码。\\n但是这样之后，细心的同学又会发现，那岂不是我每个控制器的构造方法中都需要加上这么一段代码，还是违反了DRY。\\n没错，那么这里我们就要用到面向对象的特性：封装、继承、多态中的继承。\\n我们可以定义一个抽象类\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">BaseController</code>\"\n    }\n  }), \"，让\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">BaseController</code>\"\n    }\n  }), \"继承于\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">System.Web.Mvc.Controller</code>\"\n    }\n  }), \"。\\n然后在\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">BaseController</code>\"\n    }\n  }), \"的构造方法中，我们对\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">ViewData</code>\"\n    }\n  }), \"进行赋值。\\n在项目中其他的控制器里，我们让控制器继承于\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">BaseController</code>\"\n    }\n  }), \"，那么我们的问题就解决了。\\n有人可能会问，为什么要用抽象类呢？\\n因为，我们这个类需要做的工作只是为母版页加载数据，并没有相对应的其他操作。设置为抽象类可以防止其他类直接调用该类中的方法。\\n到这里，我们需要给母版页传值的问题已经解决了。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/w1zd.github.io/w1zd.github.io/content/blog/ASP-NET-MVC给母版页传递数据.md\";\nimport React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport Layout from \"../components/layout\";\nimport TOC from \"../components/toc\";\nimport {useEffect} from \"react\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport Giscus from \"@giscus/react\";\nimport mediumZoom from \"medium-zoom\";\nconst BlogPostTemplate = _ref => {\n  let {data, pageContext, children} = _ref;\n  const post = data.mdx;\n  const {title: siteTitle, postCopyright, author, siteUrl} = data.site.siteMetadata;\n  const {previous, next} = pageContext;\n  const isDarkmode = useSelector(state => state.isDarkMode);\n  useEffect(() => {\n    mediumZoom(\".post-content img\", {\n      background: \"#292a2d\"\n    });\n  }, []);\n  return React.createElement(Layout, {\n    isFocus: false,\n    title: post.frontmatter.title,\n    description: post.frontmatter.description\n  }, React.createElement(\"div\", {\n    className: \"container\"\n  }, React.createElement(\"article\", {\n    className: \"post-wrap\"\n  }, React.createElement(\"header\", {\n    className: \"post-header\"\n  }, React.createElement(\"h1\", {\n    className: \"post-title\"\n  }, post.frontmatter.title), React.createElement(\"div\", {\n    className: \"post-meta\"\n  }, React.createElement(\"span\", {\n    className: \"post-time\"\n  }, post.frontmatter.date), \"\\xA0\")), React.createElement(\"div\", {\n    className: \"post-content\"\n  }, React.createElement(MDXProvider, null, children)), postCopyright && React.createElement(\"section\", {\n    className: \"post-copyright\"\n  }, React.createElement(\"p\", {\n    className: \"copyright-item\"\n  }, React.createElement(\"span\", null, \"Author:\\xA0\"), React.createElement(\"span\", null, author.name)), React.createElement(\"p\", {\n    className: \"copyright-item\"\n  }, React.createElement(\"span\", null, \"Permalink:\"), React.createElement(\"span\", null, React.createElement(\"a\", {\n    href: siteUrl + post.fields.slug\n  }, \" \", siteUrl + post.fields.slug, \" \"))), React.createElement(\"p\", {\n    className: \"copyright-item\"\n  }, React.createElement(\"span\", null, \"License:\\xA0\"), React.createElement(\"span\", null, React.createElement(\"a\", {\n    href: \"http://creativecommons.org/licenses/by-nc/4.0/\"\n  }, \"CC-BY-NC-4.0\")))), React.createElement(\"section\", {\n    className: \"post-tags\"\n  }, React.createElement(\"div\", null, React.createElement(\"span\", null, \"Tag(s):\"), React.createElement(\"span\", {\n    className: \"tag\"\n  }, post.frontmatter.tags.length !== 0 && post.frontmatter.tags.map(item => {\n    return React.createElement(\"a\", {\n      key: item,\n      href: `/tag/${item}`\n    }, \"#\", item);\n  }))), React.createElement(\"div\", null, React.createElement(\"a\", {\n    href: \"#/\",\n    onClick: () => {\n      window.history.back();\n    }\n  }, \"back\"), React.createElement(\"span\", null, \" \\xB7 \"), React.createElement(\"a\", {\n    href: data.site.siteMetadata.siteUrl\n  }, \"home\"))), React.createElement(\"section\", {\n    className: \"post-nav\"\n  }, previous ? React.createElement(\"a\", {\n    className: \"prev\",\n    rel: \"prev\",\n    href: previous.fields.slug\n  }, previous.frontmatter.title) : React.createElement(\"span\", {\n    className: \"prev\"\n  }, \"No More\"), next ? React.createElement(\"a\", {\n    className: \"next\",\n    rel: \"next\",\n    href: next.fields.slug\n  }, next.frontmatter.title) : React.createElement(\"span\", {\n    className: \"next\"\n  }, \"No More\")), React.createElement(Giscus, {\n    id: \"comment\",\n    repo: \"w1zd/w1zd.github.io\",\n    repoId: \"MDEwOlJlcG9zaXRvcnkyODg3MTA5NjA=\",\n    category: \"Announcements\",\n    categoryId: \"MDE4OkRpc2N1c3Npb25DYXRlZ29yeTMzMDE1OTcy\",\n    mapping: \"og:title\",\n    theme: `https://wizd.dev/giscus-themes/${isDarkmode ? \"dark\" : \"light\"}.css`,\n    reactionsEnabled: \"1\",\n    loading: \"lazy\"\n  }), post.frontmatter.toc && React.createElement(TOC, null))));\n};\nBlogPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst pageQuery = \"60074105\";\n"],"names":["_createMdxContent","props","_components","Object","assign","blockquote","p","br","h2","a","span","strong","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","BlogPostTemplate","_ref","data","pageContext","children","post","mdx","title","siteTitle","postCopyright","author","siteUrl","site","siteMetadata","previous","next","isDarkmode","useSelector","state","isDarkMode","useEffect","mediumZoom","background","Layout","isFocus","frontmatter","description","date","MDXProvider","name","fields","slug","tags","length","map","item","key","onClick","window","history","back","rel","Giscus","repo","repoId","category","categoryId","mapping","theme","reactionsEnabled","loading","toc","TOC","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}