{"version":3,"file":"component---src-templates-blog-post-tsx-content-file-path-content-blog-如何在-react-中使用节流和防抖并将他们抽象成-hooks-md-6cfcb3b09c3a06b595c1.js","mappings":"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","sources":["webpack://w1zd-lair/./content/blog/如何在-React-中使用节流和防抖并将他们抽象成-Hooks.md","webpack://w1zd-lair/./src/templates/blog-post.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    ul: \"ul\",\n    li: \"li\",\n    blockquote: \"blockquote\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Hooks 是 React 很出色的一个功能更新。它极大的简化了之前在类组件中必须拆分到各个声明周期中的逻辑。\"), \"\\n\", React.createElement(_components.p, null, \"但是，Hooks 需要一种新的思维模式，尤其是对初学者来讲。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"防抖和节流\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E9%98%B2%E6%8A%96%E5%92%8C%E8%8A%82%E6%B5%81\",\n    \"aria-label\": \"防抖和节流 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"防抖和节流\"), \"\\n\", React.createElement(_components.p, null, \"网络上有太多太多关于防抖和节流的文章了，所以我不打算再深入讨论如何编写自己的防抖和节流功能。方便起见，我们考虑直接使用 Lodash 中提供的 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">debounce</code>\"\n    }\n  }), \" 和 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">throttle</code>\"\n    }\n  }), \"。\"), \"\\n\", React.createElement(_components.p, null, \"这里我们带大家快速复习一下，防抖和节流两个函数都接收两个参数，一个回调函数以及一个以毫秒为单位的延迟（暂时称为 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">x</code>\"\n    }\n  }), \"）,而且这两个函数都返回另外一个具有特定功能的函数：\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">debounce</code>\"\n    }\n  }), \": 返回一个可以调用任意次的函数（一般是快速的连续调用），但是这个函数实际只会在最后一次调用完 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">x</code>\"\n    }\n  }), \" 毫秒后，调用回调函数。\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">throttle</code>\"\n    }\n  }), \": 返回一个可以调用任意次的函数（一般是快速的连续调用），但是每 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">x</code>\"\n    }\n  }), \" 毫秒间隔内最多只会调用一次回调函数。\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"案例\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E6%A1%88%E4%BE%8B\",\n    \"aria-label\": \"案例 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"案例\"), \"\\n\", React.createElement(_components.p, null, \"我们有一个迷你博客编辑器（\", React.createElement(_components.a, {\n    href: \"https://github.com/wtjs/react-debounce-throttle-hooks/\"\n  }, \"Github仓库地址\"), \"），在这个编辑器中，我们需要在用户每次输入停止1秒后将博客内容存储到数据库内。\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"如果你想看最终版本的代码，直接访问 \", React.createElement(_components.a, {\n    href: \"https://codesandbox.io/s/github/wtjs/react-debounce-throttle-hooks\"\n  }, \"Codesandbox\"), \" 就可以\\n我们的编辑器最小版的代码应该是这样：\"), \"\\n\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> useState <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> debounce <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'lodash.debounce'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">App</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>value<span class=\\\"token punctuation\\\">,</span> setValue<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>dbValue<span class=\\\"token punctuation\\\">,</span> saveToDb<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// would be an API call normally</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">handleChange</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">event</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">setValue</span><span class=\\\"token punctuation\\\">(</span>event<span class=\\\"token punctuation\\\">.</span>target<span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>main<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>h1<span class=\\\"token operator\\\">></span>Blog<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>h1<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>textarea value<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>value<span class=\\\"token punctuation\\\">}</span> onChange<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>handleChange<span class=\\\"token punctuation\\\">}</span> rows<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">}</span> cols<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">50</span><span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>section className<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"panels\\\"</span><span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n          <span class=\\\"token operator\\\">&lt;</span>h2<span class=\\\"token operator\\\">></span><span class=\\\"token function\\\">这是编辑器端的内容</span> <span class=\\\"token punctuation\\\">(</span>Client<span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>h2<span class=\\\"token operator\\\">></span>\\n          <span class=\\\"token punctuation\\\">{</span>value<span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n          <span class=\\\"token operator\\\">&lt;</span>h2<span class=\\\"token operator\\\">></span><span class=\\\"token function\\\">这是存储好了的内容</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token constant\\\">DB</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>h2<span class=\\\"token operator\\\">></span>\\n          <span class=\\\"token punctuation\\\">{</span>dbValue<span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>section<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>main<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"上面这段代码里，\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">saveToDb</code>\"\n    }\n  }), \" 实际上应该是对后端 API 的调用，但是这里为了让代码保持简洁，我把数据存储在 state 中，且为了方便大家观看，我直接将其渲染到了页面上。\"), \"\\n\", React.createElement(_components.p, null, \"因为我们只想在用户停止输入 1s 后执行这个存储操作，所以这里应该使用防抖。\"), \"\\n\", React.createElement(_components.p, null, \"大家可以\", React.createElement(_components.a, {\n    href: \"https://github.com/wtjs/react-debounce-throttle-hooks/tree/starter\"\n  }, \"在这里\"), \"查看起始代码。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"创建一个防抖函数\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E9%98%B2%E6%8A%96%E5%87%BD%E6%95%B0\",\n    \"aria-label\": \"创建一个防抖函数 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"创建一个防抖函数\"), \"\\n\", React.createElement(_components.p, null, \"首先，我们需要一个防抖函数来封装对 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">saveToDb</code>\"\n    }\n  }), \" 函数的调用：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> useState <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> debounce <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'lodash.debounce'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">App</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>value<span class=\\\"token punctuation\\\">,</span> setValue<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>dbValue<span class=\\\"token punctuation\\\">,</span> saveToDb<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// would be an API call normally</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">handleChange</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">event</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token literal-property property\\\">value</span><span class=\\\"token operator\\\">:</span> nextValue <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> event<span class=\\\"token punctuation\\\">.</span>target<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">setValue</span><span class=\\\"token punctuation\\\">(</span>nextValue<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">const</span> debouncedSave <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">debounce</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">saveToDb</span><span class=\\\"token punctuation\\\">(</span>nextValue<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></span><span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token function\\\">debouncedSave</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></span>  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token operator\\\">&lt;</span>main<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token comment\\\">/* Same as before */</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>main<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"但是，这样其实是不能正常工作的，大家自习观察就会发现，我们是在 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">handleChange</code>\"\n    }\n  }), \" 函数中创建的 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">debouncedSave</code>\"\n    }\n  }), \" 函数，那这就意味着，每次按键触发 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">handleChange</code>\"\n    }\n  }), \" 事件都会重新创建一个 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">debouncedSave</code>\"\n    }\n  }), \" 函数，引用不一致就会导致防抖功能失效了。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"usecallback\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#usecallback\",\n    \"aria-label\": \"usecallback permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"useCallback\"), \"\\n\", React.createElement(_components.p, null, \"在我们给子组件传递回调函数的时候，\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">useCallback</code>\"\n    }\n  }), \" 可以用来优化性能。但是我们可以利用他的另外一个特性，就是会对回调函数进行缓存，在依赖不发生任何变更的情况下，能保证每次调用的都是同一个。这样就能保证我们每次调用的 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">debounceSave</code>\"\n    }\n  }), \" 都是同一个了。\"), \"\\n\", React.createElement(_components.p, null, \"这样就跟我们预想的一样了：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> useState<span class=\\\"token punctuation\\\">,</span> useCallback <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> debounce <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'lodash.debounce'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">App</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>value<span class=\\\"token punctuation\\\">,</span> setValue<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>dbValue<span class=\\\"token punctuation\\\">,</span> saveToDb<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// would be an API call normally</span>\\n\\n<span class=\\\"gatsby-highlight-code-line\\\">  <span class=\\\"token keyword\\\">const</span> debouncedSave <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useCallback</span><span class=\\\"token punctuation\\\">(</span></span><span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token function\\\">debounce</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">nextValue</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">saveToDb</span><span class=\\\"token punctuation\\\">(</span>nextValue<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span></span><span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token comment\\\">// will be created only once initially</span></span><span class=\\\"gatsby-highlight-code-line\\\">  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">handleChange</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">event</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token literal-property property\\\">value</span><span class=\\\"token operator\\\">:</span> nextValue <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> event<span class=\\\"token punctuation\\\">.</span>target<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">setValue</span><span class=\\\"token punctuation\\\">(</span>nextValue<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token comment\\\">// Even though handleChange is created on each render and executed</span>\\n    <span class=\\\"token comment\\\">// it references the same debouncedSave that was created initially</span>\\n    <span class=\\\"token function\\\">debouncedSave</span><span class=\\\"token punctuation\\\">(</span>nextValue<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token operator\\\">&lt;</span>main<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token comment\\\">/* Same as before */</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>main<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, {\n    id: \"useref\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#useref\",\n    \"aria-label\": \"useref permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"useRef\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">useRef</code>\"\n    }\n  }), \" 可以用来创建一个可修改的对象，我们传递给 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">useRef</code>\"\n    }\n  }), \"的参数会作为初始值赋值给这个对象的 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">.current</code>\"\n    }\n  }), \" 属性。最关键的是，如果我们不去手动的更改，那么这个值会组件的生命周期内持续存在。\"), \"\\n\", React.createElement(_components.p, null, \"同样，这样也能和我们预期的一样：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> useState<span class=\\\"token punctuation\\\">,</span> useRef <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> debounce <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'lodash.debounce'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">App</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>value<span class=\\\"token punctuation\\\">,</span> setValue<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>dbValue<span class=\\\"token punctuation\\\">,</span> saveToDb<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// would be an API call normally</span>\\n\\n  <span class=\\\"token comment\\\">// This remains same across renders</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">  <span class=\\\"token keyword\\\">const</span> debouncedSave <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useRef</span><span class=\\\"token punctuation\\\">(</span></span><span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token function\\\">debounce</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">nextValue</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">saveToDb</span><span class=\\\"token punctuation\\\">(</span>nextValue<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">)</span></span><span class=\\\"gatsby-highlight-code-line\\\">  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>current<span class=\\\"token punctuation\\\">;</span></span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">handleChange</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">event</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token literal-property property\\\">value</span><span class=\\\"token operator\\\">:</span> nextValue <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> event<span class=\\\"token punctuation\\\">.</span>target<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">setValue</span><span class=\\\"token punctuation\\\">(</span>nextValue<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token comment\\\">// Even though handleChange is created on each render and executed</span>\\n    <span class=\\\"token comment\\\">// it references the same debouncedSave that was created initially</span>\\n    <span class=\\\"token function\\\">debouncedSave</span><span class=\\\"token punctuation\\\">(</span>nextValue<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token operator\\\">&lt;</span>main<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token comment\\\">/* Same as before */</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>main<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, {\n    id: \"封装一个自定义-hook\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E5%B0%81%E8%A3%85%E4%B8%80%E4%B8%AA%E8%87%AA%E5%AE%9A%E4%B9%89-hook\",\n    \"aria-label\": \"封装一个自定义 hook permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"封装一个自定义 Hook\"), \"\\n\", React.createElement(_components.p, null, \"上面两个方法中，我们用到了 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">useCallback</code>\"\n    }\n  }), \" 和 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">useRef</code>\"\n    }\n  }), \"，而且都能很好的帮我们实现需求。对于一次性案例来讲，这样挺好，但是如果写法能变得更简洁岂不是更棒？如果我们不使用 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">useCallback</code>\"\n    }\n  }), \" 和 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">useRef</code>\"\n    }\n  }), \" 的话，我们的代码会变得可读性更高。我们当然可以把这个逻辑抽象到一个 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">useDebounce</code>\"\n    }\n  }), \" Hook 中。\"), \"\\n\", React.createElement(_components.p, null, \"下面的代码是我们使用 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">useCallback</code>\"\n    }\n  }), \" 来实现我们的构思：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> useState<span class=\\\"token punctuation\\\">,</span> useCallback <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"react\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> debounce <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"lodash.debounce\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">useDebounce</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">callback<span class=\\\"token punctuation\\\">,</span> delay</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> debouncedFn <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useCallback</span><span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token function\\\">debounce</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token operator\\\">...</span>args</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">callback</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">...</span>args<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> delay<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">[</span>delay<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token comment\\\">// will recreate if delay changes</span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> debouncedFn<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">App</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>value<span class=\\\"token punctuation\\\">,</span> setValue<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>dbValue<span class=\\\"token punctuation\\\">,</span> saveToDb<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// would be an API call normally</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> debouncedSave <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useDebounce</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">nextValue</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">saveToDb</span><span class=\\\"token punctuation\\\">(</span>nextValue<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">handleChange</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">event</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token literal-property property\\\">value</span><span class=\\\"token operator\\\">:</span> nextValue <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> event<span class=\\\"token punctuation\\\">.</span>target<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">setValue</span><span class=\\\"token punctuation\\\">(</span>nextValue<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">debouncedSave</span><span class=\\\"token punctuation\\\">(</span>nextValue<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token operator\\\">&lt;</span>main<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token comment\\\">/* Same as before */</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>main<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"这个代码确实能正常运行也能完成我们要的功能，但是很奇怪的，我的 TypeScript Linter 报了一个错误：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">React Hook useCallback received a <span class=\\\"token keyword\\\">function</span> whose dependencies are unknown.\\nPass an inline <span class=\\\"token keyword\\\">function</span> instead. eslint<span class=\\\"token punctuation\\\">(</span>react-hooks/exhaustive-deps<span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"但是这个代码能在 JavaScript 环境下正常运行，并且没有任何错误（使用的是 create-react-app 模板）。不管怎么样，下边给大家提供一个替代方案，使用 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">useRef</code>\"\n    }\n  }), \" 来实现的 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">useDebounce</code>\"\n    }\n  }), \" Hook:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">useDebounce</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">callback<span class=\\\"token punctuation\\\">,</span> delay</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// Memoizing the callback because if it's an arrow function</span>\\n  <span class=\\\"token comment\\\">// it would be different on each render</span>\\n  <span class=\\\"token keyword\\\">const</span> memoizedCallback <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useCallback</span><span class=\\\"token punctuation\\\">(</span>callback<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> debouncedFn <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useRef</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">debounce</span><span class=\\\"token punctuation\\\">(</span>memoizedCallback<span class=\\\"token punctuation\\\">,</span> delay<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token function\\\">useEffect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    debouncedFn<span class=\\\"token punctuation\\\">.</span>current <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">debounce</span><span class=\\\"token punctuation\\\">(</span>memoizedCallback<span class=\\\"token punctuation\\\">,</span> delay<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span>memoizedCallback<span class=\\\"token punctuation\\\">,</span> debouncedFn<span class=\\\"token punctuation\\\">,</span> delay<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> debouncedFn<span class=\\\"token punctuation\\\">.</span>current<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"这个代码没有上面使用 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">useCallback</code>\"\n    }\n  }), \" 实现的简洁，很有可能我那个 Linter 的错误是一个 Gug, 说不定过不了多久就能修复了。\"), \"\\n\", React.createElement(_components.p, null, \"在这篇文章里，我只是简单的介绍了防抖，但是节流也可以用同样的方式来实现。一样的，你也可以做一个自己的 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">useThrottle</code>\"\n    }\n  }), \" Hook。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/w1zd.github.io/w1zd.github.io/content/blog/如何在-React-中使用节流和防抖并将他们抽象成-Hooks.md\";\nimport React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport Layout from \"../components/layout\";\nimport TOC from \"../components/toc\";\nimport {useEffect} from \"react\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport Giscus from \"@giscus/react\";\nimport mediumZoom from \"medium-zoom\";\nconst BlogPostTemplate = _ref => {\n  let {data, pageContext, children} = _ref;\n  const post = data.mdx;\n  const {title: siteTitle, postCopyright, author, siteUrl} = data.site.siteMetadata;\n  const {previous, next} = pageContext;\n  const isDarkmode = useSelector(state => state.isDarkMode);\n  useEffect(() => {\n    mediumZoom(\".post-content img\", {\n      background: \"#292a2d\"\n    });\n  }, []);\n  return React.createElement(Layout, {\n    isFocus: false,\n    title: post.frontmatter.title,\n    description: post.frontmatter.description\n  }, React.createElement(\"div\", {\n    className: \"container\"\n  }, React.createElement(\"article\", {\n    className: \"post-wrap\"\n  }, React.createElement(\"header\", {\n    className: \"post-header\"\n  }, React.createElement(\"h1\", {\n    className: \"post-title\"\n  }, post.frontmatter.title), React.createElement(\"div\", {\n    className: \"post-meta\"\n  }, React.createElement(\"span\", {\n    className: \"post-time\"\n  }, post.frontmatter.date), \"\\xA0\")), React.createElement(\"div\", {\n    className: \"post-content\"\n  }, React.createElement(MDXProvider, null, children)), postCopyright && React.createElement(\"section\", {\n    className: \"post-copyright\"\n  }, React.createElement(\"p\", {\n    className: \"copyright-item\"\n  }, React.createElement(\"span\", null, \"Author:\\xA0\"), React.createElement(\"span\", null, author.name)), React.createElement(\"p\", {\n    className: \"copyright-item\"\n  }, React.createElement(\"span\", null, \"Permalink:\"), React.createElement(\"span\", null, React.createElement(\"a\", {\n    href: siteUrl + post.fields.slug\n  }, \" \", siteUrl + post.fields.slug, \" \"))), React.createElement(\"p\", {\n    className: \"copyright-item\"\n  }, React.createElement(\"span\", null, \"License:\\xA0\"), React.createElement(\"span\", null, React.createElement(\"a\", {\n    href: \"http://creativecommons.org/licenses/by-nc/4.0/\"\n  }, \"CC-BY-NC-4.0\")))), React.createElement(\"section\", {\n    className: \"post-tags\"\n  }, React.createElement(\"div\", null, React.createElement(\"span\", null, \"Tag(s):\"), React.createElement(\"span\", {\n    className: \"tag\"\n  }, post.frontmatter.tags.length !== 0 && post.frontmatter.tags.map(item => {\n    return React.createElement(\"a\", {\n      key: item,\n      href: `/tag/${item}`\n    }, \"#\", item);\n  }))), React.createElement(\"div\", null, React.createElement(\"a\", {\n    href: \"#/\",\n    onClick: () => {\n      window.history.back();\n    }\n  }, \"back\"), React.createElement(\"span\", null, \" \\xB7 \"), React.createElement(\"a\", {\n    href: data.site.siteMetadata.siteUrl\n  }, \"home\"))), React.createElement(\"section\", {\n    className: \"post-nav\"\n  }, previous ? React.createElement(\"a\", {\n    className: \"prev\",\n    rel: \"prev\",\n    href: previous.fields.slug\n  }, previous.frontmatter.title) : React.createElement(\"span\", {\n    className: \"prev\"\n  }, \"No More\"), next ? React.createElement(\"a\", {\n    className: \"next\",\n    rel: \"next\",\n    href: next.fields.slug\n  }, next.frontmatter.title) : React.createElement(\"span\", {\n    className: \"next\"\n  }, \"No More\")), React.createElement(Giscus, {\n    id: \"comment\",\n    repo: \"w1zd/w1zd.github.io\",\n    repoId: \"MDEwOlJlcG9zaXRvcnkyODg3MTA5NjA=\",\n    category: \"Announcements\",\n    categoryId: \"MDE4OkRpc2N1c3Npb25DYXRlZ29yeTMzMDE1OTcy\",\n    mapping: \"og:title\",\n    theme: `https://wizd.dev/giscus-themes/${isDarkmode ? \"dark\" : \"light\"}.css`,\n    reactionsEnabled: \"1\",\n    loading: \"lazy\"\n  }), post.frontmatter.toc && React.createElement(TOC, null))));\n};\nBlogPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst pageQuery = \"60074105\";\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h2","a","span","ul","li","blockquote","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","BlogPostTemplate","_ref","data","pageContext","children","post","mdx","title","siteTitle","postCopyright","author","siteUrl","site","siteMetadata","previous","next","isDarkmode","useSelector","state","isDarkMode","useEffect","mediumZoom","background","Layout","isFocus","frontmatter","description","date","MDXProvider","name","fields","slug","tags","length","map","item","key","onClick","window","history","back","rel","Giscus","repo","repoId","category","categoryId","mapping","theme","reactionsEnabled","loading","toc","TOC","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}