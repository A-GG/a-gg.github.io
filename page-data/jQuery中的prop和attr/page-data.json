{"componentChunkName":"component---src-templates-blog-post-tsx-content-file-path-content-blog-j-query中的prop和attr-md","path":"/jQuery中的prop和attr/","result":{"data":{"site":{"siteMetadata":{"title":"Wizard's Lair","postCopyright":true,"siteUrl":"https://wizd.dev","author":{"name":"w1zd"}}},"mdx":{"id":"a4d49452-6b06-5be2-b571-ecc579a9ff95","excerpt":"在JQuery中，对CheckBox的操作分两个阶段，一个是JQuery1.6之前的版本，一个是1.6之后的版本 在1.6之前，我们这么做：\n\n但是细心的同学会发现，在jQuery1.6之后，如果还像上面这么做，那肯定会出问题： 获取到的值并不是和，而是或者\n\n那在1.6之后如何进行操作呢?\n\njQuery在之后的版本中对…","body":"在JQuery中，对CheckBox的操作分两个阶段，一个是JQuery1.6之前的版本，一个是1.6之后的版本\n\n在1.6之前，我们这么做：\n```markup\n<input type='checkbox' id='checkbox'/> \n<script> \nvar isChecked = $('#checkbox').attr('checked'); \n$('#checkbox').attr('checked',true); \n</script>\n```\n但是细心的同学会发现，在jQuery1.6之后，如果还像上面这么做，那肯定会出问题： \n`$('#checkbox').attr('checked');`获取到的值并不是`true`和`false`，而是`checked`或者`undefined`  \n\n那在1.6之后如何进行操作呢?\n\njQuery在之后的版本中对属性和特性进行了比较细致的区分，什么是特性呢？  \n特性就是像 `checked`，`selectedIndex`, `tagName`, `nodeName`, `nodeType`, `ownerDocument`, `defaultChecked`, 和`defaultSelected`等等这些。\n\n那prop()和attr()到底有什么区别呢？\n\n1. 于build-in属性，attribute和property共享数据，attribute更改了会对property造成影响，反之亦然，但是两者的自定义属性是独立的数据，即使name一样，也互不影响，看起来是下面这张图，但是IE6、7没有作区分，依然共享自定义属性数据   \n2. 并不是所有的attribute与对应的property名字都一致，比如刚才使用的attribute 的class属性，使用property操作的时候应该是这样className  \n\t `t.className='active2';`\n3. 对于值是true/false的property，类似于input的checked attribute等，attribute取得值是HTML文档字面量值，property是取得计算结果，property改变并不影响attribute字面量，但attribute改变会一向property计算  \n\t`<input id=\"test3\" type=\"checkbox\"/>`\n\n\t```javascript\n\t\tvar t=document.getElementById('test3');\n        console.log(t.getAttribute('checked'));//null\n        console.log(t.checked);//false;\n\n        t.setAttribute('checked','checked');\n        console.log(t.getAttribute('checked'));//checked\n        console.log(t.checked);//true\n\n        t.checked=false;\n        console.log(t.getAttribute('checked'));//checked\n        console.log(t.checked);//false\n\t```\n\n4. 对于一些和路径相关的属性，两者取得值也不尽相同，但是同样attribute取得是字面量，property取得是计算后的完整路径  \n\t`<a id=\"test4\" href=\"#\">Click</a>`\n\t```javascript\n\tvar t=document.getElementById('test4');\n    console.log(t.getAttribute('href'));//#\n    console.log(t.href);//file:///C:/Users/bsun/Desktop/ss/anonymous.html#\n  ```\n\n|Attribute/Property|.attr()|.prop()|\n|--|--|--|\n|accesskey|√| |\n|align|√| |\n|async|√|√|\n|autofocus|√|√|\n|checked|√|√|\n|class|√| |\n|contenteditable|√| |\n|draggable|√| |\n|href|√| |\n|id|√| |\n|label|√| |\n|location ( i.e. window.location )|√|√|\n|multiple|√|√|\n|readOnly|√|√|\n|rel|√| |\n|selected|√|√|\n|src|√| |\n|tabindex|√| |\n|title|√| |\n|type|√| |\n|width ( if needed over .width() )|√| |\n","fields":{"slug":"/jQuery中的prop和attr/"},"frontmatter":{"title":"jQuery中的prop和attr","date":"September 11, 2014","description":null,"categories":["技术文章"],"tags":["Front-end","jQuery"],"toc":null}}},"pageContext":{"slug":"/jQuery中的prop和attr/","previous":{"internal":{"contentFilePath":"/home/runner/work/w1zd.github.io/w1zd.github.io/content/blog/UEFI-BIOS下Windows系统的安装.md"},"fields":{"slug":"/UEFI-BIOS下Windows系统的安装/"},"frontmatter":{"title":"UEFI BIOS下Windows系统的安装"}},"next":{"internal":{"contentFilePath":"/home/runner/work/w1zd.github.io/w1zd.github.io/content/blog/原生JS实现AJAX、JSONP及DOM加载完成事件.md"},"fields":{"slug":"/原生JS实现AJAX、JSONP及DOM加载完成事件/"},"frontmatter":{"title":"原生JS实现AJAX、JSONP及DOM加载完成事件"}},"frontmatter":{"title":"jQuery中的prop和attr","date":"2014-09-11T21:16:50.284Z","tags":["Front-end","jQuery"],"categories":["技术文章"]}}},"staticQueryHashes":["2786614800","3000541721","3828236571"],"slicesMap":{}}