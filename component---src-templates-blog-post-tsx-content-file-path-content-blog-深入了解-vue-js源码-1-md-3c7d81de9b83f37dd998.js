"use strict";(self.webpackChunkw1zd_lair=self.webpackChunkw1zd_lair||[]).push([[5047],{4409:function(n,a,e){e.r(a),e.d(a,{default:function(){return g}});var s=e(8453),t=e(6540);function c(n){const a=Object.assign({img:"img",p:"p",h2:"h2",a:"a",span:"span"},(0,s.RP)(),n.components);return t.createElement(t.Fragment,null,t.createElement(a.img,{src:"https://raw.githubusercontent.com/w1zd/image-hosting/main/img/2022/05/10/11-42-38-5f75fb98c1e274b008e1820cfe81599d-vue-constructor-fdc04a.png",alt:""}),"\n",t.createElement(a.p,null,"本系列文章详细介绍了Vue.js源代码，对其中的JavaScript代码进行了详细的说明。 并且尝试将概念分解为JavaScript初学者可以理解的水平。"),"\n",t.createElement(a.h2,{id:"vue-构造函数",style:{position:"relative"}},t.createElement(a.a,{href:"#vue-%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0","aria-label":"vue 构造函数 permalink",className:"anchor before"},t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Vue 构造函数"),"\n",t.createElement(a.p,null,"Vue 实例是深入了解 Vue.js 源代码的最合适的切入点。 正如 Vue.js 指南所解释的那样，“每个 Vue 应用程序都是通过使用 Vue 构造函数创建一个新的 Vue 实例来开始的。”"),"\n",t.createElement(a.p,null,"在 Vue.js 源代码中，创建新的 Vue 实例是通过使用 Vue 对象构造函数来实现的："),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Vue</span> <span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">\'production\'</span> <span class="token operator">&amp;&amp;</span>\n    <span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token keyword">instanceof</span> <span class="token class-name">Vue</span><span class="token punctuation">)</span>\n  <span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">\'Vue is a constructor and should be called with the `new` keyword\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_init</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"我们可以将对象构造函数理解为用于创建的模板。而对象构造函数通常按约定以大写字母开头："),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript"><span class="token comment">// Vue 构造函数的声明</span>\n<span class="token keyword">function</span> <span class="token function">Vue</span> <span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t<span class="token comment">// 构造函数函数体</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"我们一般使用 ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">new</code>'}})," 关键字调用对象构造函数。 例如，您可以按如下方式调用Vue构造函数："),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript"><span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token comment">// options</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"调用对象构造函数会返回一个新对象，并将函数内部的 ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">this</code>'}})," 关键字设置为最终返回的对象。"),"\n",t.createElement(a.p,null,"Vue 构造函数会接收一个参数：",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">options</code>'}}),"。"),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Vue</span> <span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t<span class="token punctuation">[</span><span class="token punctuation">.</span> <span class="token punctuation">.</span> <span class="token punctuation">.</span> <span class="token punctuation">.</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"Vue 对象构造函数中会使用 ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">if</code>'}})," 语句来判断当前环境是否为生产环境："),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript"><span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">\'production\'</span> <span class="token operator">&amp;&amp;</span>\n    <span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token keyword">instanceof</span> <span class="token class-name">Vue</span><span class="token punctuation">)</span>\n   <span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">\'Vue is a constructor and should be called with the `new` keyword\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"如果当前的环境为生产环境，则 ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">if</code>'}})," 语句中的 ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">&amp;&amp;</code>'}})," 短路运算会返回 ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">false</code>'}}),", 并且后续的表达式",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">!(this instanceof Vue)</code>'}}),"将不会被执行。"),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript">process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">\'production\'</span> <span class="token operator">&amp;&amp;</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"如果您在开发环境中，则构造函数中会检查 ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">this</code>'}})," 是否为 Vue 的实例。"),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript"><span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token keyword">instanceof</span> <span class="token class-name">Vue</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"如果您在开发环境中并且 ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">this</code>'}})," 不是 Vue 的实例，则构造函数中会调用 ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">warn</code>'}})," 函数并传递一个字符串作为参数，通知开发人员应该使用 ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">new</code>'}}),"关键字将 Vue 作为函数构造函数调用。"),"\n",t.createElement(a.p,null,"我们将在另一篇文章中查看 ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">warn</code>'}})," 函数的实现细节。 如果您仔细观察，会发现传递给 ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">warn</code>'}})," 函数的参数使用到了单引号和反引号："),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript"><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">\'Vue is a constructor and should be called with the `new` keyword\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"在单引号中间使用反引号，可以防止单引号的引用过早结束。"),"\n",t.createElement(a.p,null,"最后，Vue函数构造函数调用 ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">this._init</code>'}})," 方法，并将构造函数函数被调用时接收到的 ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">options</code>'}}),"参数作为实参传递给该方法："),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Vue</span> <span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">.</span><span class="token punctuation">]</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_init</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"但是请大家思考一个问题， 这个我们调用的 ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">this._init</code>'}})," 是在哪里定义的呢？正如我们所看到的，构造函数内部并未对这个 ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">._init</code>'}})," 方法进行定义。"),"\n",t.createElement(a.p,null,"快速进行全局搜索源码可以发现 ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">._init</code>'}})," 方法是在名为 ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">initMixin</code>'}})," 的函数中添加到 ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">Vue.prototype</code>'}})," 上的。"),"\n",t.createElement(a.p,null,"下一篇文章，我将带领大家一起探究 ",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">initMixin</code>'}})," 方法究竟做了什么事情。"))}var l=function(n){void 0===n&&(n={});const{wrapper:a}=Object.assign({},(0,s.RP)(),n.components);return a?t.createElement(a,n,t.createElement(c,n)):c(n)},p=e(1468),o=e(7947),r=e(1327),u=e(2171),i=e(9739);const m=n=>{let{data:a,pageContext:e,children:c}=n;const l=a.mdx,{title:m,postCopyright:g,author:d,siteUrl:k}=a.site.siteMetadata,{previous:h,next:E}=e,v=(0,p.d4)((n=>n.isDarkMode));return(0,t.useEffect)((()=>{(0,i.A)(".post-content img",{background:"#292a2d"})}),[]),t.createElement(o.A,{isFocus:!1,title:l.frontmatter.title,description:l.frontmatter.description},t.createElement("div",{className:"container"},t.createElement("article",{className:"post-wrap"},t.createElement("header",{className:"post-header"},t.createElement("h1",{className:"post-title"},l.frontmatter.title),t.createElement("div",{className:"post-meta"},a.site.siteMetadata.author.name,"  /  ",t.createElement("span",{className:"post-time"},l.frontmatter.date)," ")),t.createElement("div",{className:"post-content"},t.createElement(s.xA,null,c)),g&&t.createElement("section",{className:"post-copyright"},t.createElement("p",{className:"copyright-item"},t.createElement("span",null,"Author: "),t.createElement("span",null,d.name)),t.createElement("p",{className:"copyright-item"},t.createElement("span",null,"Permalink:"),t.createElement("span",null,t.createElement("a",{href:k+l.fields.slug}," ",k+l.fields.slug," "))),t.createElement("p",{className:"copyright-item"},t.createElement("span",null,"License: "),t.createElement("span",null,t.createElement("a",{href:"http://creativecommons.org/licenses/by-nc/4.0/"},"CC-BY-NC-4.0")))),t.createElement("section",{className:"post-tags"},t.createElement("div",null,t.createElement("span",null,"Tag(s):"),t.createElement("span",{className:"tag"},0!==l.frontmatter.tags.length&&l.frontmatter.tags.map((n=>t.createElement("a",{key:n,href:`/tag/${n}`},"#",n))))),t.createElement("div",null,t.createElement("a",{href:"#/",onClick:()=>{window.history.back()}},"back"),t.createElement("span",null," · "),t.createElement("a",{href:a.site.siteMetadata.siteUrl},"home"))),t.createElement("section",{className:"post-nav"},h?t.createElement("a",{className:"prev",rel:"prev",href:h.fields.slug},h.frontmatter.title):t.createElement("span",{className:"prev"},"No More"),E?t.createElement("a",{className:"next",rel:"next",href:E.fields.slug},E.frontmatter.title):t.createElement("span",{className:"next"},"No More")),t.createElement(u.A,{id:"comment",repo:"w1zd/w1zd.github.io",repoId:"MDEwOlJlcG9zaXRvcnkyODg3MTA5NjA=",category:"Announcements",categoryId:"MDE4OkRpc2N1c3Npb25DYXRlZ29yeTMzMDE1OTcy",mapping:"og:title",theme:`https://wizd.dev/giscus-themes/${v?"dark":"light"}.css`,reactionsEnabled:"1",loading:"lazy"}),l.frontmatter.toc&&t.createElement(r.A,null))))};function g(n){return t.createElement(m,n,t.createElement(l,n))}}}]);
//# sourceMappingURL=component---src-templates-blog-post-tsx-content-file-path-content-blog-深入了解-vue-js源码-1-md-3c7d81de9b83f37dd998.js.map