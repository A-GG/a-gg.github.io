{"version":3,"file":"component---src-templates-blog-post-tsx-content-file-path-content-blog-java-script深拷贝实现-md-fe53f427caf8186267f3.js","mappings":"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","sources":["webpack://w1zd-lair/./content/blog/JavaScript深拷贝实现.md","webpack://w1zd-lair/./src/templates/blog-post.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    h4: \"h4\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"在实际开发当中，我们经常会遇到要对对象进行深拷贝的情况。而且深拷贝这个问题在面试过程中也经常会遇到，下面就对本人在学习过程中的收获，做以简单的总结。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"什么是浅拷贝什么是深拷贝\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E4%BB%80%E4%B9%88%E6%98%AF%E6%B5%85%E6%8B%B7%E8%B4%9D%E4%BB%80%E4%B9%88%E6%98%AF%E6%B7%B1%E6%8B%B7%E8%B4%9D\",\n    \"aria-label\": \"什么是浅拷贝什么是深拷贝 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"什么是浅拷贝，什么是深拷贝？\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"什么是浅拷贝\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E4%BB%80%E4%B9%88%E6%98%AF%E6%B5%85%E6%8B%B7%E8%B4%9D\",\n    \"aria-label\": \"什么是浅拷贝 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"什么是浅拷贝\"), \"\\n\", React.createElement(_components.p, null, \"关于浅拷贝的概念，我在网上看到一种说法，直接上代码。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">var</span> person <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token literal-property property\\\">name</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"Jason\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token literal-property property\\\">age</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">18</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token literal-property property\\\">car</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token literal-property property\\\">brand</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"Ferrari\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token literal-property property\\\">type</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"430\\\"</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">var</span> person1 <span class=\\\"token operator\\\">=</span> person<span class=\\\"token punctuation\\\">;</span> \\t\\t<span class=\\\"token comment\\\">//他们认为这是浅拷贝</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"但是我个人认为，上面这个根本不涉及拷贝，只是一个简单的引用赋值。以我的理解，浅拷贝应该是不考虑对象的引用类型的属性，只对当前对象的所有成员进行拷贝，代码如下：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">copy</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">obj</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n\\t<span class=\\\"token keyword\\\">var</span> objCopy <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\t<span class=\\\"token keyword\\\">for</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">var</span> key <span class=\\\"token keyword\\\">in</span> obj<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n\\t\\tobjCopy<span class=\\\"token punctuation\\\">[</span>key<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> obj<span class=\\\"token punctuation\\\">[</span>key<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\t<span class=\\\"token punctuation\\\">}</span>\\n\\t<span class=\\\"token keyword\\\">return</span> objCopy<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">var</span> person <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token literal-property property\\\">name</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"Jason\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token literal-property property\\\">age</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">18</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token literal-property property\\\">car</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token literal-property property\\\">brand</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"Ferrari\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token literal-property property\\\">type</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"430\\\"</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">var</span> personCopy <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">copy</span><span class=\\\"token punctuation\\\">(</span>person<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"上面这段代码中，\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">person</code>\"\n    }\n  }), \"对象拥有两个基本类型的属性\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">name</code>\"\n    }\n  }), \"和\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">age</code>\"\n    }\n  }), \"，一个引用类型的属性\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">car</code>\"\n    }\n  }), \"，当使用如上方法进行拷贝的时候，\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">name</code>\"\n    }\n  }), \"和\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">age</code>\"\n    }\n  }), \"属性会被正常的拷贝，但是\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">car</code>\"\n    }\n  }), \"属性，只会进行引用的拷贝，这样会导致拷贝出来的对象\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">personCopy</code>\"\n    }\n  }), \"和\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">person</code>\"\n    }\n  }), \"会共用一个\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">car</code>\"\n    }\n  }), \"对象。这样就是所谓的浅拷贝。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"什么是深拷贝\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E4%BB%80%E4%B9%88%E6%98%AF%E6%B7%B1%E6%8B%B7%E8%B4%9D\",\n    \"aria-label\": \"什么是深拷贝 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"什么是深拷贝\"), \"\\n\", React.createElement(_components.p, null, \"深拷贝的就是在拷贝的时候，需要将当前要拷贝的对象内的所有引用类型的属性进行完整的拷贝，也就是说拷贝出来的对象和原对象之间没有任何数据是共享的，所有的东西都是自己独占的一份。\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"如何实现深拷贝\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E6%B7%B1%E6%8B%B7%E8%B4%9D\",\n    \"aria-label\": \"如何实现深拷贝 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"如何实现深拷贝\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"实现深拷贝需要考虑的问题\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E5%AE%9E%E7%8E%B0%E6%B7%B1%E6%8B%B7%E8%B4%9D%E9%9C%80%E8%A6%81%E8%80%83%E8%99%91%E7%9A%84%E9%97%AE%E9%A2%98\",\n    \"aria-label\": \"实现深拷贝需要考虑的问题 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"实现深拷贝需要考虑的问题\"), \"\\n\", React.createElement(_components.p, null, \"实现深拷贝需要考虑如下几个因素：\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"传入的对象是使用对象字面量\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">{}</code>\"\n    }\n  }), \"创建的对象还是由构造函数生成的对象\"), \"\\n\", React.createElement(_components.li, null, \"如果对象是由构造函数创建出来的，那么是否要拷贝原型链上的属性\"), \"\\n\", React.createElement(_components.li, null, \"如果要拷贝原型链上的属性，那么如果原型链上存在多个同名的属性，保留哪个\"), \"\\n\", React.createElement(_components.li, null, \"处理循环引用的问题\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"第三方库实现深拷贝\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E5%AE%9E%E7%8E%B0%E6%B7%B1%E6%8B%B7%E8%B4%9D\",\n    \"aria-label\": \"第三方库实现深拷贝 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"第三方库实现深拷贝\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"jquery的extend\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#jquery%E7%9A%84extend\",\n    \"aria-label\": \"jquery的extend permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"jQuery的$.extend()\"), \"\\n\", React.createElement(_components.p, null, \"我们可以通过\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">$.extend()</code>\"\n    }\n  }), \"方法来完成深复制。值得庆幸的是，我们在\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">jQuery</code>\"\n    }\n  }), \"中可以通过添加一个参数来实现递归\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">extend</code>\"\n    }\n  }), \"。调用\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">$.extend(true, {}, ...)</code>\"\n    }\n  }), \"就可以实现深复制，参考下面的例子:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">var</span> x <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token literal-property property\\\">a</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token literal-property property\\\">b</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token literal-property property\\\">f</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token literal-property property\\\">g</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token literal-property property\\\">c</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span> <span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">var</span> y <span class=\\\"token operator\\\">=</span> $<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">extend</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> x<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>          <span class=\\\"token comment\\\">//shallow copy</span>\\n    z <span class=\\\"token operator\\\">=</span> $<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">extend</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> x<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>    <span class=\\\"token comment\\\">//deep copy</span>\\n\\ny<span class=\\\"token punctuation\\\">.</span>b<span class=\\\"token punctuation\\\">.</span>f <span class=\\\"token operator\\\">===</span> x<span class=\\\"token punctuation\\\">.</span>b<span class=\\\"token punctuation\\\">.</span>f       <span class=\\\"token comment\\\">// true</span>\\nz<span class=\\\"token punctuation\\\">.</span>b<span class=\\\"token punctuation\\\">.</span>f <span class=\\\"token operator\\\">===</span> x<span class=\\\"token punctuation\\\">.</span>b<span class=\\\"token punctuation\\\">.</span>f       <span class=\\\"token comment\\\">// false</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"但是jQuery的这个\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">$.extend()</code>\"\n    }\n  }), \"方法，有弊端，什么弊端呢？我们看下面的例子：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">var</span> objA <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">var</span> objB <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\nobjA<span class=\\\"token punctuation\\\">.</span>b <span class=\\\"token operator\\\">=</span> objB<span class=\\\"token punctuation\\\">;</span>\\nobjB<span class=\\\"token punctuation\\\">.</span>a <span class=\\\"token operator\\\">=</span> objA<span class=\\\"token punctuation\\\">;</span>\\n\\n$<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">extend</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>a<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">//这个时候就出现异常了</span>\\n<span class=\\\"token comment\\\">//Uncaught RangeError: Maximum call stack size exceeded(…)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"也就是说，jQuery中的\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">$.extend()</code>\"\n    }\n  }), \"并没有处理循环引用的问题。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"使用json对象实现深拷贝\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E4%BD%BF%E7%94%A8json%E5%AF%B9%E8%B1%A1%E5%AE%9E%E7%8E%B0%E6%B7%B1%E6%8B%B7%E8%B4%9D\",\n    \"aria-label\": \"使用json对象实现深拷贝 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"使用JSON对象实现深拷贝\"), \"\\n\", React.createElement(_components.p, null, \"使用\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">JSON</code>\"\n    }\n  }), \"全局对象的\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">parse</code>\"\n    }\n  }), \"和\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">stringify</code>\"\n    }\n  }), \"方法来实现深复制也算是一个简单讨巧的方法。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">jsonClone</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">obj</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token constant\\\">JSON</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">parse</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token constant\\\">JSON</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">stringify</span><span class=\\\"token punctuation\\\">(</span>obj<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">var</span> clone <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">jsonClone</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token literal-property property\\\">a</span><span class=\\\"token operator\\\">:</span><span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"然而使用这种方法会有一些隐藏的坑，它能正确处理的对象只有 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Number</code>\"\n    }\n  }), \", \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">String</code>\"\n    }\n  }), \", \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Boolean</code>\"\n    }\n  }), \", \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Array</code>\"\n    }\n  }), \", 扁平对象，即那些能够被 json 直接表示的数据结构。\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"自己造轮子\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%E8%87%AA%E5%B7%B1%E9%80%A0%E8%BD%AE%E5%AD%90\",\n    \"aria-label\": \"自己造轮子 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"自己造轮子\"), \"\\n\", React.createElement(_components.p, null, \"下面我们给出一个简单的解决方案，当然这个方案是参考别人的方式来实现的。希望对大家有用。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">var</span> clone <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t<span class=\\\"token comment\\\">//这个方法用来获取对象的类型 返回值为字符串类型 \\\"Object RegExp Date Array...\\\"</span>\\n\\t<span class=\\\"token keyword\\\">var</span> <span class=\\\"token function-variable function\\\">classof</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">o</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\t<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>o <span class=\\\"token operator\\\">===</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\t\\t<span class=\\\"token keyword\\\">return</span> <span class=\\\"token string\\\">\\\"null\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\t<span class=\\\"token punctuation\\\">}</span>\\n\\t\\t<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>o <span class=\\\"token operator\\\">===</span> <span class=\\\"token keyword\\\">undefined</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\t\\t<span class=\\\"token keyword\\\">return</span> <span class=\\\"token string\\\">\\\"undefined\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\t<span class=\\\"token punctuation\\\">}</span>\\n\\t\\t<span class=\\\"token comment\\\">// 这里的Object.prototype.toString很可能用的就是Object.prototype.constructor.name</span>\\n\\t\\t<span class=\\\"token comment\\\">// 这里使用Object.prototype.toString来生成类型字符串</span>\\n\\t\\t<span class=\\\"token keyword\\\">var</span> className <span class=\\\"token operator\\\">=</span> <span class=\\\"token class-name\\\">Object</span><span class=\\\"token punctuation\\\">.</span>prototype<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toString</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">call</span><span class=\\\"token punctuation\\\">(</span>o<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">slice</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">8</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\t<span class=\\\"token keyword\\\">return</span> className<span class=\\\"token punctuation\\\">;</span>\\n\\t<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n\\t<span class=\\\"token comment\\\">//这里这个变量我们用来存储已经保存过的属性，目的在于处理循环引用的问题</span>\\n\\t<span class=\\\"token keyword\\\">var</span> references <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">;</span>\\n\\n\\t<span class=\\\"token comment\\\">//遇到不同类型的对象的处理方式</span>\\n\\t<span class=\\\"token keyword\\\">var</span> handlers <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\t<span class=\\\"token comment\\\">//正则表达式的处理</span>\\n\\t\\t<span class=\\\"token string-property property\\\">'RegExp'</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">reg</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\t\\t<span class=\\\"token keyword\\\">var</span> flags <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\t\\tflags <span class=\\\"token operator\\\">+=</span> reg<span class=\\\"token punctuation\\\">.</span>global <span class=\\\"token operator\\\">?</span> <span class=\\\"token string\\\">'g'</span> <span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\t\\tflags <span class=\\\"token operator\\\">+=</span> reg<span class=\\\"token punctuation\\\">.</span>multiline <span class=\\\"token operator\\\">?</span> <span class=\\\"token string\\\">'m'</span> <span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\t\\tflags <span class=\\\"token operator\\\">+=</span> reg<span class=\\\"token punctuation\\\">.</span>ignoreCase <span class=\\\"token operator\\\">?</span> <span class=\\\"token string\\\">'i'</span> <span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\t\\t<span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">RegExp</span><span class=\\\"token punctuation\\\">(</span>reg<span class=\\\"token punctuation\\\">.</span>source<span class=\\\"token punctuation\\\">,</span> flags<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\t<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n\\t\\t<span class=\\\"token comment\\\">//时间对象处理</span>\\n\\t\\t<span class=\\\"token string-property property\\\">'Date'</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">date</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\t\\t<span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Date</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">+</span>date<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\t<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n\\t\\t<span class=\\\"token comment\\\">//数组处理 第二个参数为是否做浅拷贝</span>\\n\\t\\t<span class=\\\"token string-property property\\\">'Array'</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">arr<span class=\\\"token punctuation\\\">,</span> shallow</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\t\\t<span class=\\\"token keyword\\\">var</span> newArr <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n\\t\\t\\ti<span class=\\\"token punctuation\\\">;</span>\\n\\t\\t\\t<span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span>i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> arr<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\t\\t\\t<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>shallow<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\t\\t\\t\\tnewArr<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> arr<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\t\\t\\t<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\t\\t\\t\\t<span class=\\\"token comment\\\">//这里我们通过reference数组来处理循环引用问题</span>\\n\\t\\t\\t\\t\\t<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>references<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">indexOf</span><span class=\\\"token punctuation\\\">(</span>arr<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">!==</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\t\\t\\t\\t\\t<span class=\\\"token keyword\\\">continue</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\t\\t\\t\\t<span class=\\\"token punctuation\\\">}</span>\\n\\t\\t\\t\\t\\t<span class=\\\"token keyword\\\">var</span> handler <span class=\\\"token operator\\\">=</span> handlers<span class=\\\"token punctuation\\\">[</span><span class=\\\"token function\\\">classof</span><span class=\\\"token punctuation\\\">(</span>arr<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\t\\t\\t\\t<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>handler<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\t\\t\\t\\t\\treferences<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>arr<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\t\\t\\t\\t\\tnewArr<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">handler</span><span class=\\\"token punctuation\\\">(</span>arr<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\t\\t\\t\\t<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\t\\t\\t\\t\\tnewArr<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> arr<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\t\\t\\t\\t<span class=\\\"token punctuation\\\">}</span>\\n\\t\\t\\t\\t<span class=\\\"token punctuation\\\">}</span>\\n\\t\\t\\t<span class=\\\"token punctuation\\\">}</span>\\n\\t\\t\\t<span class=\\\"token keyword\\\">return</span> newArr<span class=\\\"token punctuation\\\">;</span>\\n\\t\\t<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n\\t\\t<span class=\\\"token comment\\\">//正常对象的处理 第二个参数为是否做浅拷贝</span>\\n\\t\\t<span class=\\\"token string-property property\\\">'Object'</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">obj<span class=\\\"token punctuation\\\">,</span> shallow</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\t\\t<span class=\\\"token keyword\\\">var</span> newObj <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> prop<span class=\\\"token punctuation\\\">,</span> handler<span class=\\\"token punctuation\\\">;</span>\\n\\t\\t\\t<span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span>prop <span class=\\\"token keyword\\\">in</span> obj<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\t\\t\\t<span class=\\\"token comment\\\">//关于原型中属性的处理太过复杂，我们这里暂时不做处理</span>\\n\\t\\t\\t\\t<span class=\\\"token comment\\\">//所以只对对象本身的属性做拷贝</span>\\n\\t\\t\\t\\t<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>obj<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">hasOwnProperty</span><span class=\\\"token punctuation\\\">(</span>prop<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\t\\t\\t\\t<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>shallow<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\t\\t\\t\\t\\tnewObj<span class=\\\"token punctuation\\\">[</span>prop<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> obj<span class=\\\"token punctuation\\\">[</span>prop<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\t\\t\\t\\t<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\t\\t\\t\\t\\t<span class=\\\"token comment\\\">//这里还是处理循环引用的问题</span>\\n\\t\\t\\t\\t\\t\\t<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>references<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">indexOf</span><span class=\\\"token punctuation\\\">(</span>obj<span class=\\\"token punctuation\\\">[</span>prop<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">!==</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"token keyword\\\">continue</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\t\\t\\t\\t\\t<span class=\\\"token punctuation\\\">}</span>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\thandler <span class=\\\"token operator\\\">=</span> handlers<span class=\\\"token punctuation\\\">[</span><span class=\\\"token function\\\">classof</span><span class=\\\"token punctuation\\\">(</span>obj<span class=\\\"token punctuation\\\">[</span>prop<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\t\\t\\t\\t\\t<span class=\\\"token comment\\\">//如果没有对应的处理方式，那么就直接复制</span>\\n\\t\\t\\t\\t\\t\\t<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>handler<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\t\\t\\t\\t\\t\\treferences<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>obj<span class=\\\"token punctuation\\\">[</span>prop<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\t\\t\\t\\t\\t\\tnewObj<span class=\\\"token punctuation\\\">[</span>prop<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">handler</span><span class=\\\"token punctuation\\\">(</span>obj<span class=\\\"token punctuation\\\">[</span>prop<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\t\\t\\t\\t\\t<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\t\\t\\t\\t\\t\\tnewObj<span class=\\\"token punctuation\\\">[</span>prop<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> obj<span class=\\\"token punctuation\\\">[</span>prop<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\t\\t\\t\\t\\t<span class=\\\"token punctuation\\\">}</span>\\n\\t\\t\\t\\t\\t<span class=\\\"token punctuation\\\">}</span>\\n\\t\\t\\t\\t<span class=\\\"token punctuation\\\">}</span>\\n\\t\\t\\t<span class=\\\"token punctuation\\\">}</span>\\n\\t\\t\\t<span class=\\\"token keyword\\\">return</span> newObj<span class=\\\"token punctuation\\\">;</span>\\n\\t\\t<span class=\\\"token punctuation\\\">}</span>\\n\\t<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n\\t<span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">obj<span class=\\\"token punctuation\\\">,</span> shallow</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\t<span class=\\\"token comment\\\">//首先重置我们用来处理循环引用的这个变量</span>\\n\\t\\treferences <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\t<span class=\\\"token comment\\\">//我们默认处理为浅拷贝</span>\\n\\t\\tshallow <span class=\\\"token operator\\\">=</span> shallow <span class=\\\"token operator\\\">===</span> <span class=\\\"token keyword\\\">undefined</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\t<span class=\\\"token keyword\\\">var</span> handler <span class=\\\"token operator\\\">=</span> handlers<span class=\\\"token punctuation\\\">[</span><span class=\\\"token function\\\">classof</span><span class=\\\"token punctuation\\\">(</span>obj<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\t<span class=\\\"token keyword\\\">return</span> handler <span class=\\\"token operator\\\">?</span> <span class=\\\"token function\\\">handler</span><span class=\\\"token punctuation\\\">(</span>obj<span class=\\\"token punctuation\\\">,</span> shallow<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">:</span> obj<span class=\\\"token punctuation\\\">;</span>\\n\\t<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t<span class=\\\"token comment\\\">//下面是一些测试代码</span>\\n\\t<span class=\\\"token keyword\\\">var</span> date <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Date</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t<span class=\\\"token keyword\\\">var</span> reg <span class=\\\"token operator\\\">=</span> <span class=\\\"token regex\\\"><span class=\\\"token regex-delimiter\\\">/</span><span class=\\\"token regex-source language-regex\\\">hello word</span><span class=\\\"token regex-delimiter\\\">/</span><span class=\\\"token regex-flags\\\">gi</span></span><span class=\\\"token punctuation\\\">;</span>\\n\\t<span class=\\\"token keyword\\\">var</span> obj <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\t<span class=\\\"token literal-property property\\\">prop</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'this ia a string'</span><span class=\\\"token punctuation\\\">,</span>\\n\\t\\t<span class=\\\"token literal-property property\\\">arr</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n\\t\\t<span class=\\\"token literal-property property\\\">o</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\t\\t<span class=\\\"token literal-property property\\\">wow</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'aha'</span>\\n\\t\\t<span class=\\\"token punctuation\\\">}</span>\\n\\t<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\t<span class=\\\"token keyword\\\">var</span> refer1 <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\t<span class=\\\"token literal-property property\\\">arr</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">]</span>\\n\\t<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\t<span class=\\\"token keyword\\\">var</span> refer2 <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\t<span class=\\\"token literal-property property\\\">refer</span><span class=\\\"token operator\\\">:</span> refer1\\n\\t<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\trefer1<span class=\\\"token punctuation\\\">.</span>refer <span class=\\\"token operator\\\">=</span> refer2<span class=\\\"token punctuation\\\">;</span>\\n\\n\\t<span class=\\\"token keyword\\\">var</span> cloneDate <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">clone</span><span class=\\\"token punctuation\\\">(</span>date<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t<span class=\\\"token keyword\\\">var</span> cloneReg <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">clone</span><span class=\\\"token punctuation\\\">(</span>reg<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t<span class=\\\"token keyword\\\">var</span> cloneObj <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">clone</span><span class=\\\"token punctuation\\\">(</span>obj<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t<span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>date <span class=\\\"token operator\\\">!==</span> cloneDate<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token punctuation\\\">(</span>date<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">valueOf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">===</span> cloneDate<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">valueOf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t<span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>cloneReg <span class=\\\"token operator\\\">!==</span> reg<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token punctuation\\\">(</span>reg<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toString</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">===</span> cloneReg<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toString</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t<span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>obj <span class=\\\"token operator\\\">!==</span> cloneObj<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token punctuation\\\">(</span>obj<span class=\\\"token punctuation\\\">.</span>arr <span class=\\\"token operator\\\">!==</span> cloneObj<span class=\\\"token punctuation\\\">.</span>arr<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token punctuation\\\">(</span>obj<span class=\\\"token punctuation\\\">.</span>o <span class=\\\"token operator\\\">!==</span> cloneObj<span class=\\\"token punctuation\\\">.</span>o<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token constant\\\">JSON</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">stringify</span><span class=\\\"token punctuation\\\">(</span>obj<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">===</span> <span class=\\\"token constant\\\">JSON</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">stringify</span><span class=\\\"token punctuation\\\">(</span>cloneObj<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n\\t<span class=\\\"token function\\\">clone</span><span class=\\\"token punctuation\\\">(</span>refer2<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t<span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"I'm not dead yet!\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t<span class=\\\"token comment\\\">// Output:</span>\\n\\t<span class=\\\"token comment\\\">// true</span>\\n\\t<span class=\\\"token comment\\\">// true</span>\\n\\t<span class=\\\"token comment\\\">// true</span>\\n\\t<span class=\\\"token comment\\\">// I'm not dead yet!</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/w1zd.github.io/w1zd.github.io/content/blog/JavaScript深拷贝实现.md\";\nimport React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport Layout from \"../components/layout\";\nimport TOC from \"../components/toc\";\nimport {useEffect} from \"react\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport Giscus from \"@giscus/react\";\nimport mediumZoom from \"medium-zoom\";\nconst BlogPostTemplate = _ref => {\n  let {data, pageContext, children} = _ref;\n  const post = data.mdx;\n  const {title: siteTitle, postCopyright, author, siteUrl} = data.site.siteMetadata;\n  const {previous, next} = pageContext;\n  const isDarkmode = useSelector(state => state.isDarkMode);\n  useEffect(() => {\n    mediumZoom(\".post-content img\", {\n      background: \"#292a2d\"\n    });\n  }, []);\n  return React.createElement(Layout, {\n    isFocus: false,\n    title: post.frontmatter.title,\n    description: post.frontmatter.description\n  }, React.createElement(\"div\", {\n    className: \"container\"\n  }, React.createElement(\"article\", {\n    className: \"post-wrap\"\n  }, React.createElement(\"header\", {\n    className: \"post-header\"\n  }, React.createElement(\"h1\", {\n    className: \"post-title\"\n  }, post.frontmatter.title), React.createElement(\"div\", {\n    className: \"post-meta\"\n  }, React.createElement(\"span\", {\n    className: \"post-time\"\n  }, post.frontmatter.date), \"\\xA0\")), React.createElement(\"div\", {\n    className: \"post-content\"\n  }, React.createElement(MDXProvider, null, children)), postCopyright && React.createElement(\"section\", {\n    className: \"post-copyright\"\n  }, React.createElement(\"p\", {\n    className: \"copyright-item\"\n  }, React.createElement(\"span\", null, \"Author:\\xA0\"), React.createElement(\"span\", null, author.name)), React.createElement(\"p\", {\n    className: \"copyright-item\"\n  }, React.createElement(\"span\", null, \"Permalink:\"), React.createElement(\"span\", null, React.createElement(\"a\", {\n    href: siteUrl + post.fields.slug\n  }, \" \", siteUrl + post.fields.slug, \" \"))), React.createElement(\"p\", {\n    className: \"copyright-item\"\n  }, React.createElement(\"span\", null, \"License:\\xA0\"), React.createElement(\"span\", null, React.createElement(\"a\", {\n    href: \"http://creativecommons.org/licenses/by-nc/4.0/\"\n  }, \"CC-BY-NC-4.0\")))), React.createElement(\"section\", {\n    className: \"post-tags\"\n  }, React.createElement(\"div\", null, React.createElement(\"span\", null, \"Tag(s):\"), React.createElement(\"span\", {\n    className: \"tag\"\n  }, post.frontmatter.tags.length !== 0 && post.frontmatter.tags.map(item => {\n    return React.createElement(\"a\", {\n      key: item,\n      href: `/tag/${item}`\n    }, \"#\", item);\n  }))), React.createElement(\"div\", null, React.createElement(\"a\", {\n    href: \"#/\",\n    onClick: () => {\n      window.history.back();\n    }\n  }, \"back\"), React.createElement(\"span\", null, \" \\xB7 \"), React.createElement(\"a\", {\n    href: data.site.siteMetadata.siteUrl\n  }, \"home\"))), React.createElement(\"section\", {\n    className: \"post-nav\"\n  }, previous ? React.createElement(\"a\", {\n    className: \"prev\",\n    rel: \"prev\",\n    href: previous.fields.slug\n  }, previous.frontmatter.title) : React.createElement(\"span\", {\n    className: \"prev\"\n  }, \"No More\"), next ? React.createElement(\"a\", {\n    className: \"next\",\n    rel: \"next\",\n    href: next.fields.slug\n  }, next.frontmatter.title) : React.createElement(\"span\", {\n    className: \"next\"\n  }, \"No More\")), React.createElement(Giscus, {\n    id: \"comment\",\n    repo: \"w1zd/w1zd.github.io\",\n    repoId: \"MDEwOlJlcG9zaXRvcnkyODg3MTA5NjA=\",\n    category: \"Announcements\",\n    categoryId: \"MDE4OkRpc2N1c3Npb25DYXRlZ29yeTMzMDE1OTcy\",\n    mapping: \"og:title\",\n    theme: `https://wizd.dev/giscus-themes/${isDarkmode ? \"dark\" : \"light\"}.css`,\n    reactionsEnabled: \"1\",\n    loading: \"lazy\"\n  }), post.frontmatter.toc && React.createElement(TOC, null))));\n};\nBlogPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst pageQuery = \"60074105\";\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h2","a","span","h3","ul","li","h4","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","BlogPostTemplate","_ref","data","pageContext","children","post","mdx","title","siteTitle","postCopyright","author","siteUrl","site","siteMetadata","previous","next","isDarkmode","useSelector","state","isDarkMode","useEffect","mediumZoom","background","Layout","isFocus","frontmatter","description","date","MDXProvider","name","fields","slug","tags","length","map","item","key","onClick","window","history","back","rel","Giscus","repo","repoId","category","categoryId","mapping","theme","reactionsEnabled","loading","toc","TOC","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}